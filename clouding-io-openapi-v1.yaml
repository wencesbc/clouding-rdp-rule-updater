openapi: 3.0.1
info:
  title: Clouding API
  description: "# Introduction\n\n\nThe <a href=\"https://clouding.io\" target=\"_blank\">Clouding</a> API allows you to manage your infrastructure resources through a secure and convenient interface. With this API, you can automate common tasks such as creating, updating, and deleting resources, as well as retrieving information about your current infrastructure. The API uses standard HTTP methods, such as GET, POST, PATCH, and DELETE, and returns data in JSON format. \n\n\nWhether you're a developer looking to automate your infrastructure management or an IT manager looking to streamline your operations, the Clouding API is the perfect solution. \n\n\n## Responses\n\nThis API returns the following HTTP status codes in response to API requests:\n\n| Status Code               | Description                                                                                                                                                            |\n|---------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 200 OK                    | The request was successful and the response includes the requested data.                                                                                               |\n| 201 Created               | The request has been fulfilled and a new resource has been created. The response will include a `Location` header, which contains the URL of the newly created resource. |\n| 202 Accepted              | The request was accepted and is being processed asynchronously.                                                                                                        |\n| 204 No Content            | The server has successfully processed the request and that there is no additional information to be returned.                                                          |\n| 400 Bad Request           | The request was invalid, and the response includes a <a href=\"https://www.rfc-editor.org/rfc/rfc7807\" target=\"_blank\">problem-details</a> object.                      |\n| 401 Unauthorized          | The API key provided was missing or invalid.                                                                                                                           |\n| 403 Forbidden             | The account is restricted from performing this operation.                                                                                                   |\n| 404 Not Found             | The requested resource could not be found on the server.                                                                                                               |\n| 405 Method Not Allowed    | The request method used on the requested resource is not allowed. The response includes an `Allow` header that specifies which methods are supported.                  |\n| 429 Too Many Requests     | The rate limit has been exceeded, and the response includes [details](#section/Introduction/Rate-limit).                                                               |\n| 500 Internal Server Error | An unexpected error occurred.                                                                                                                                          |\n| 503 Service Unavailable   | The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.                                                 |\n\n\nIn addition to the HTTP status code, each response from the API includes a <a href=\"https://www.rfc-editor.org/rfc/rfc7807\" target=\"_blank\">problem-details</a> object that provides more information about the error, if applicable. This object includes a title and a detail field that describe the error, and may also include additional information such as a `traceId` that is used to uniquely identify the request.\n\n\n## Rate limit\n\nTo ensure stable performance for all users, this API has a rate limit of:\n\n- 100 requests per minute\n- 6000 requests per hour\n\n\nAll API responses include the following rate limit headers:\n\n| Header                 | Description                                                                                                                          |\n|------------------------|--------------------------------------------------------------------------------------------------------------------------------------|\n| x-rate-limit-limit     | This header specifies the rate limit for the API key. The value is a string that indicates the rate limit period (e.g. 1m, 12h, 1d). |\n| x-rate-limit-remaining | This header specifies the number of remaining API requests for the rate limit period. The value is an integer.                       |\n| x-rate-limit-reset     | This header specifies the date and time (in UTC, in ISO 8601 format) when the rate limit will reset.                                 |\n\nIf you exceed the API rate limit, the API will return a 429 Too Many Requests HTTP status code and a JSON response with the following format:\n\n```json\n{\n  \"type\": \"https://api.clouding.io/docs#section/Introduction/Rate-limit\",\n  \"title\": \"Rate Limit Quota Exceeded\",\n  \"status\": 429,\n  \"detail\": \"Maximum allowed: {0} per {1}. Please try again in {2} second(s).\"\n}\n```\n\nInformation on the specific rate limit that was exceeded, the maximum number of requests allowed, and the time period for the rate limit is described in the `detail` property. The values in curly braces `{0}`, `{1}`, and `{2}` will be replaced with the actual values.\n\n## Pagination\n\nThe API uses a combination of `page` and `pageSize` query parameters to paginate returned data. By default, the API returns up to 20 results per request. To retrieve additional pages, you can specify the `page` and `pageSize` parameters in your API request.\n\n\nThe response to a paginated request will include a `links` object that contains the URL to the next and previous pages, if available.\nIf there is no next or previous page, the respective link in the links object will not have a value.\n\nAdditionally, a `meta` object will be included in the response with information about the total number of results.\n\n#### Example\n\n```json\n{\n  \"data\": [\n      ...\n  ],\n  \"links\": {\n    \"next\": \"https://api.clouding.io/v1/servers?page=3&pageSize=20\",\n    \"previous\": \"https://api.clouding.io/v1/servers?page=1&pageSize=20\"\n  },\n  \"meta\": {\n    \"total\": 100\n  }        \n}\n```\n\n\n## Long running actions\n\nThe API utilizes action objects to track and manage long running operations, such as server creations and server snapshots. \nThe action objects are created when a new operation is initiated and updated as the operation progresses. \nThis allows the API to provide real-time information about the status and progress of the operation to the caller.\nThe Action object includes the following fields:\n\n| Property     | Description                                                                                                               |\n|--------------|---------------------------------------------------------------------------------------------------------------------------|\n| id           | A unique identifier for the action.                                                                                       |\n| status       | The current status of the action. Possible values are: `pending`, `inProgress`, `completed`, `errored`.                           |\n| type         | The type of action that is being performed, such as creating a server snapshot.                                           |\n| startedAt    | The date and time when the action was started, in UTC time.                                                               |\n| completedAt  | The date and time when the action was completed, in UTC time. This field will be null if the action is still in progress. |\n| resourceId   | The unique identifier of the resource that the action is being performed on, such as a server.                            |\n| resourceType | The type of resource that the action is being performed on, such as a server or a snapshot.                               |\n\nYou can use the Action object to track the progress of long running actions, or to retrieve a history of actions that have been performed on a resource. For example, you could periodically check the status of the action and display a progress indicator to your users, or you could retrieve a list of all actions performed on a server and display them in a history log.\n\n## Cross-Origin Resource Sharing\n\nThis API implements Cross-Origin Resource Sharing (CORS) to allow requests from different origins. CORS allows your application to securely make API requests from a client-side JavaScript application, without the need for a proxy or server-side workaround. This API allows requests from any origin. \n\n# Authentication\n\n### API key authentication\n\nTo access this API, you must include an API key in the `X-API-KEY` header of your API requests. The API key is used to authenticate and authorize your API requests. You can generate and manage your API keys from the <a href=\"https://portal.clouding.io/dsb/account/api\" target=\"_blank\">Clouding Portal</a>.\n\n#### Example Request with API key\n```shell\ncurl -X $METHOD \\\n -H \"Accept: application/json\" \\\n -H \"X-API-KEY: $CLOUDING_APIKEY\" \\\n $URL\n```\n\nIt is important to keep your API keys secure and to only use them in server-side applications. Do not include API keys in client-side code, as this can compromise the security of your API keys. If you suspect that your API key has been compromised, you can delete it from the <a href=\"https://portal.clouding.io/dsb/account/api\" target=\"_blank\">Clouding Portal</a>."
  termsOfService: https://help.clouding.io/hc/es/articles/360011091939
  contact:
    name: Clouding Support
    email: soporte@clouding.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: https://api.clouding.io/
    description: Production
paths:
  /v1/backups:
    get:
      tags:
        - Backups
      summary: List all backups
      description: "The list backups endpoint allows you to retrieve a list of backups that have been created.\r\n            The endpoint accepts an optional `serverId` query parameter, which you can use to retrieve backups for a specific server.\r\n            If the `serverId` parameter is not specified, the API returns the backups of all servers."
      operationId: ListAllBackups
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
        - name: serverId
          in: query
          description: An optional query parameter that is used to filter the backups that belong to a server with that id.
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The list of backups
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupList'
              example:
                backups:
                  - id: 86EAL1xB769Z4q2w
                    createdAt: '2023-01-01T12:00:00.0000000Z'
                    serverId: mawqYZWOojWQyOV0
                    serverName: my-test-server
                    volumeSizeGb: 25
                    image:
                      id: lo1qJ9oZb1xGMEgD
                      name: CelestiaOS 2.04 (64 Bit)
                      accessMethods:
                        sshKey: optional
                        password: optional
                  - id: 64qnwPxG8V93BQdJ
                    createdAt: '2022-12-31T12:00:00.0000000Z'
                    serverId: oMlzaBXm2LWE3bQK
                    serverName: my-web-server
                    volumeSizeGb: 50
                    image:
                      id: lo1qJ9oZb1xGMEgD
                      name: CelestiaOS 2.04 (64 Bit)
                      accessMethods:
                        sshKey: optional
                        password: optional
                links:
                  next: https://api.clouding.io/v1/backups?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/backups
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/backups?page=1&pageSize=2\""
  '/v1/backups/{id}':
    get:
      tags:
        - Backups
      summary: Get backup by id
      description: The get backup by id endpoint allows you to retrieve information about a specific backup based on its unique identifier.
      operationId: GetBackupById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the backup.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The backup
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
              example:
                id: 86EAL1xB769Z4q2w
                createdAt: '2023-01-01T12:00:00.0000000Z'
                serverId: mawqYZWOojWQyOV0
                serverName: my-test-server
                volumeSizeGb: 25
                image:
                  id: lo1qJ9oZb1xGMEgD
                  name: CelestiaOS 2.04 (64 Bit)
                  accessMethods:
                    sshKey: optional
                    password: optional
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/backups/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/backups/86EAL1xB769Z4q2w\""
  /v1/actions:
    get:
      tags:
        - Actions
      summary: List all actions
      description: The list all actions endpoint allows you to retrieve a list of all long-running operations or "actions" that have been initiated.
      operationId: ListAllActions
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of actions
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActionList'
              example:
                actions:
                  - id: pDbYdwx0BXVE8znO
                    status: completed
                    type: create
                    startedAt: '2023-01-03T12:00:00.0000000Z'
                    completedAt: '2023-01-03T12:02:00.0000000Z'
                    resourceId: eAMVoaXqP9BLJwR6
                    resourceType: server
                  - id: N3V2ryXQjWa6pvok
                    status: completed
                    type: delete
                    startedAt: '2023-01-03T11:55:00.0000000Z'
                    completedAt: '2023-01-03T11:55:05.0000000Z'
                    resourceId: m1LrZ3W8exDzN60o
                    resourceType: server
                links:
                  next: https://api.clouding.io/v1/actions?page=2&pagesize=2
                  previous: 
                meta:
                  total: 2
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/actions
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/actions?page=1&pageSize=2\""
  '/v1/actions/{id}':
    get:
      tags:
        - Actions
      summary: Get action by id
      description: The get action by id endpoint allows you to retrieve information about a specific action based on its unique identifier.
      operationId: GetActionById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the action.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: N3V2ryXQjWa6pvok
                status: completed
                type: delete
                startedAt: '2023-01-03T11:55:00.0000000Z'
                completedAt: '2023-01-03T11:55:05.0000000Z'
                resourceId: m1LrZ3W8exDzN60o
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/actions/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/actions/N3V2ryXQjWa6pvok\""
  /v1/snapshots:
    get:
      tags:
        - Snapshots
      summary: List all snapshots
      description: The endpoint for listing all snapshots with their access methods and cost.
      operationId: ListAllSnapshots
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The snapshot list
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
              example:
                snapshots:
                  - id: ZPlL0kxDyR9Q3Yb5
                    sizeGb: 5
                    name: snapshot-with-nginx
                    description: A snapshot of the server after nginx installation
                    createdAt: '2023-01-03T12:00:00.0000000Z'
                    sourceServerName: web-server
                    image:
                      id: lo1qJ9oZb1xGMEgD
                      name: CelestiaOS 2.04 (64 Bit)
                      accessMethods:
                        sshKey: optional
                        password: optional
                    cost:
                      pricePerHour: 0.0007
                      pricePerMonthApprox: 0.511
                  - id: jDGPRJXLpGXeV5M1
                    sizeGb: 15
                    name: snapshot-with-mysql
                    description: A snapshot of the server after mysql installation
                    createdAt: '2023-01-03T12:00:00.0000000Z'
                    sourceServerName: db-server
                    image:
                      id: DGPRJXLAOGWeV5M1
                      name: Galaxion 15 (CelestiaOS 2.04 64Bit)
                      accessMethods:
                        sshKey: optional
                        password: optional
                    cost:
                      pricePerHour: 0.0021
                      pricePerMonthApprox: 1.533
                links:
                  next: https://api.clouding.io/v1/snapshots?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/snapshots
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/snapshots?page=1&pageSize=2\""
  '/v1/snapshots/{id}':
    get:
      tags:
        - Snapshots
      summary: Get snapshot by id
      description: The endpoint for retrieving a specific snapshot with its access methods and cost by providing its unique identifier.
      operationId: GetSnapshotById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the snapshot.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The snapshot
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
              example:
                id: jDGPRJXLpGXeV5M1
                sizeGb: 15
                name: snapshot-with-mysql
                description: A snapshot of the server after mysql installation
                createdAt: '2023-01-03T12:00:00.0000000Z'
                sourceServerName: db-server
                image:
                  id: DGPRJXLAOGWeV5M1
                  name: Galaxion 15 (CelestiaOS 2.04 64Bit)
                  accessMethods:
                    sshKey: optional
                    password: optional
                cost:
                  pricePerHour: 0.0021
                  pricePerMonthApprox: 1.533
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/snapshots/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/snapshots/jDGPRJXLpGXeV5M1\""
    patch:
      tags:
        - Snapshots
      summary: Update snapshot
      description: The update snapshot information endpoint is used to modify an existing snapshot's name and/or description.
      operationId: UpdateSnapshot
      parameters:
        - name: id
          in: path
          description: The unique identifier of the snapshot.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSnapshotInformation'
            example:
              name: snapshot-with-mariadb
              description: A snapshot of the server after mariadb installation
      responses:
        '204':
          description: The snapshot was updated and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/snapshots/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X PATCH \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"name\":\"snapshot-with-mariadb\",\"description\":\"A snapshot of the server after mariadb installation\"}' \\\r\n\"https://api.clouding.io/v1/snapshots/jDGPRJXLpGXeV5M1\""
    delete:
      tags:
        - Snapshots
      summary: Delete snapshot
      description: The delete snapshot endpoint allows you to delete a specific snapshot by providing its identifier.
      operationId: DeleteSnapshot
      parameters:
        - name: id
          in: path
          description: The unique identifier of the snapshot.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The delete snapshot action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: lo1qJ9oZKJxGMEgD
                status: inProgress
                type: delete
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: jDGPRJXLpGXeV5M1
                resourceType: snapshot
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/snapshots/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/snapshots/jDGPRJXLpGXeV5M1\""
  /v1/sizes/flavors:
    get:
      tags:
        - Sizes
      summary: List all flavors
      description: "The endpoint for retrieving information about all available flavors. \r\n                        Flavors refer to the pre-configured options of vCores and RAM for the server."
      operationId: ListAllFlavors
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of flavor sizes
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpsConfigurationSizes'
              example:
                flavors:
                  - id: 0.5x1
                    vCores: 0.5
                    ramGb: 1
                    pricePerHour: 0.00342
                    pricePerMonthApprox: 2.4966
                  - id: 1x2
                    vCores: 1
                    ramGb: 2
                    pricePerHour: 0.00684
                    pricePerMonthApprox: 4.9932
                links:
                  next: https://api.clouding.io/v1/sizes/flavors?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/sizes/flavors
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/sizes/flavors?page=1&pageSize=2\""
  /v1/sizes/volumes:
    get:
      tags:
        - Sizes
      summary: List all volume sizes
      description: "The endpoint for retrieving information about all available volume sizes.\r\n                        Volume size refers to the amount of storage that can be attached to a server, and is separate from the flavor size."
      operationId: ListAllVolumeSizes
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of volume sizes
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeConfigurationSizes'
              example:
                volumeSizes:
                  - storageType: ssd
                    sizeGb: 5
                    pricePerHour: 0.0007
                    pricePerMonthApprox: 0.511
                  - storageType: ssd
                    sizeGb: 10
                    pricePerHour: 0.0014
                    pricePerMonthApprox: 1.022
                links:
                  next: https://api.clouding.io/v1/sizes/volumes?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/sizes/volumes
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/sizes/volumes?page=1&pageSize=2\""
  /v1/servers:
    get:
      tags:
        - Servers
      summary: List all servers
      description: "A GET endpoint that returns a list of servers, with information on backups, \r\n                            snapshots, backup configuration and firewalls."
      operationId: ListAllServers
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The server list
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerList'
              example:
                servers:
                  - id: wJLB82xyPWOrqeN6
                    name: web-server
                    hostname: web.example.com
                    vCores: 1
                    ramGb: 2
                    flavor: 1x2
                    volumeSizeGb: 10
                    image:
                      id: lo1qJ9oZb1xGMEgD
                      name: CelestiaOS 2.04 (64 Bit)
                    status: Active
                    powerState: Running
                    features:
                      - PrivateNetwork
                    createdAt: '2023-01-01T12:00:00.0000000Z'
                    dnsAddress: e9feeaf6-9b57-47e2-a783-bbc1d198eb58.clouding.host
                    publicIp: 185.256.254.189
                    privateIp: 10.20.10.2
                    sshKeyId: Dd8v0nXJ1924rayY
                  - id: ke8vlrXPjxO1oq3m
                    name: database-server
                    hostname: db.example.com
                    vCores: 1
                    ramGb: 4
                    flavor: 1x4
                    volumeSizeGb: 15
                    image:
                      id: lo1qJ9oZb1xGMEgD
                      name: CelestiaOS 2.04 (64 Bit)
                    status: Active
                    powerState: Running
                    features:
                      - Backups
                      - PrivateNetwork
                    createdAt: '2022-12-19T12:00:00.0000000Z'
                    dnsAddress: 0447ff27-2d5f-4888-9822-46ea09048cb4.clouding.host
                    publicIp: 185.256.254.180
                    privateIp: 10.20.10.1
                    sshKeyId: Dd8v0nXJ1924rayY
                links:
                  next: https://api.clouding.io/v1/servers?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/servers
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers?page=1&pageSize=2\""
    post:
      tags:
        - Servers
      summary: Create server
      description: "\r\nThe create server endpoint can be used the create a new server according to the configuration provided in the body.\r\nA server can be created from an `image`, a `snapshot`, a `backup` or another `server`.\r\n \r\nThe response will contain an [action](#section/Introduction/Long-running-actions) object that can be used to check the status of the process."
      operationId: CreateServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServer'
            examples:
              Create a server from image:
                value:
                  name: my server
                  hostname: my-server.example.com
                  flavorId: 1x2
                  firewallId: LywOkvx5LWAp28NP
                  accessConfiguration:
                    sshKeyId: Dd8v0nXJ1924rayY
                    password: 
                    savePassword: false
                  volume:
                    source: image
                    id: lo1qJ9oZb1xGMEgD
                    ssdGb: 10
                    shutDownSource: 
                  enablePrivateNetwork: true
                  enableStrictAntiDDoSFiltering: false
                  userData: 
                  backupPreferences: 
              Create a server from image with backups:
                value:
                  name: my server with backups
                  hostname: my-server.example.com
                  flavorId: 1x2
                  firewallId: LywOkvx5LWAp28NP
                  accessConfiguration:
                    sshKeyId: Dd8v0nXJ1924rayY
                    password: myN0t50S3cur3P4s5w0rd
                    savePassword: true
                  volume:
                    source: image
                    id: lo1qJ9oZb1xGMEgD
                    ssdGb: 10
                    shutDownSource: 
                  enablePrivateNetwork: true
                  enableStrictAntiDDoSFiltering: false
                  userData: 
                  backupPreferences:
                    slots: 4
                    frequency: oneWeek
              Clone a server:
                value:
                  name: my server clone
                  hostname: clone.example.com
                  flavorId: 1x2
                  firewallId: LywOkvx5LWAp28NP
                  accessConfiguration:
                    sshKeyId: Dd8v0nXJ1924rayY
                    password: 
                    savePassword: false
                  volume:
                    source: server
                    id: wJLB82xyPWOrqeN6
                    ssdGb: 10
                    shutDownSource: 
                  enablePrivateNetwork: true
                  enableStrictAntiDDoSFiltering: false
                  userData: 
                  backupPreferences: 
              Create a server from a snapshot:
                value:
                  name: from snapshot
                  hostname: from-snapshot
                  flavorId: 1x2
                  firewallId: LywOkvx5LWAp28NP
                  accessConfiguration:
                    sshKeyId: Dd8v0nXJ1924rayY
                    password: 
                    savePassword: false
                  volume:
                    source: snapshot
                    id: ZPlL0kxDyR9Q3Yb5
                    ssdGb: 5
                    shutDownSource: 
                  enablePrivateNetwork: true
                  enableStrictAntiDDoSFiltering: false
                  userData: 
                  backupPreferences: 
              Create a server from a backup:
                value:
                  name: from backup
                  hostname: from-backup
                  flavorId: 1x2
                  firewallId: LywOkvx5LWAp28NP
                  accessConfiguration:
                    sshKeyId: Dd8v0nXJ1924rayY
                    password: 
                    savePassword: false
                  volume:
                    source: backup
                    id: 86EAL1xB769Z4q2w
                    ssdGb: 25
                    shutDownSource: 
                  enablePrivateNetwork: true
                  enableStrictAntiDDoSFiltering: false
                  userData: 
                  backupPreferences: 
      responses:
        '202':
          description: The new server and create server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewServer'
              example:
                id: Q7y1OZWlknXmk6l3
                name: my server
                hostname: my-server.example.com
                vCores: 1
                ramGb: 2
                flavor: 1x2
                volumeSizeGb: 10
                image:
                  id: lo1qJ9oZb1xGMEgD
                  name: CelestiaOS 2.04 (64 Bit)
                status: Spawning
                pendingFeatures:
                  - PrivateNetwork
                pendingFirewalls:
                  - LywOkvx5LWAp28NP
                requestedAccessConfiguration:
                  sshKeyId: Dd8v0nXJ1924rayY
                  hasPassword: false
                  savePassword: false
                backupPreferences: 
                action:
                  id: ZPlL0kxDyR9Q3Yb5
                  status: inProgress
                  type: create
                  startedAt: '2023-01-03T12:00:00.0000000Z'
                  completedAt: 
                  resourceId: Q7y1OZWlknXmk6l3
                  resourceType: server
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/servers
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"name\":\"my server\",\"hostname\":\"my-server.example.com\",\"flavorId\":\"1x2\",\"firewallId\":\"LywOkvx5LWAp28NP\",\"accessConfiguration\":{\"sshKeyId\":\"Dd8v0nXJ1924rayY\",\"password\":null,\"savePassword\":false},\"volume\":{\"source\":\"image\",\"id\":\"lo1qJ9oZb1xGMEgD\",\"ssdGb\":10,\"shutDownSource\":null},\"enablePrivateNetwork\":true,\"enableStrictAntiDDoSFiltering\":false,\"userData\":null,\"backupPreferences\":null}' \\\r\n\"https://api.clouding.io/v1/servers\""
  '/v1/servers/{id}':
    get:
      tags:
        - Servers
      summary: Get server by id
      description: "A GET endpoint that returns information on a single server, including its backups, \r\n                            snapshots, backup configuration, firewalls, and cost."
      operationId: GetServerById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The server
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDetailed'
              example:
                id: ke8vlrXPjxO1oq3m
                name: database-server
                hostname: db.example.com
                vCores: 1
                ramGb: 4
                flavor: 1x4
                volumeSizeGb: 15
                image:
                  id: lo1qJ9oZb1xGMEgD
                  name: CelestiaOS 2.04 (64 Bit)
                status: Active
                powerState: Running
                features:
                  - Backups
                  - PrivateNetwork
                createdAt: '2022-12-19T12:00:00.0000000Z'
                dnsAddress: 0447ff27-2d5f-4888-9822-46ea09048cb4.clouding.host
                publicIp: 185.256.254.180
                privateIp: 10.20.10.1
                sshKeyId: Dd8v0nXJ1924rayY
                firewalls:
                  - id: LywOkvx5LWAp28NP
                    name: Allow all private traffic
                  - id: JLB82xyP8aWOrqeN
                    name: Allow MySQL
                snapshots: [ ]
                backups:
                  - id: 3lo1qJ9oO19GMEgD
                    createdAt: '2023-01-03T12:00:00.0000000Z'
                    status: Creating
                  - id: mR2Dn6xgD49OMPyE
                    createdAt: '2023-01-02T12:00:00.0000000Z'
                    status: Created
                  - id: wa7BmZXbRoXe2Mjn
                    createdAt: '2023-01-01T12:00:00.0000000Z'
                    status: Created
                  - id: NAQopLWpMbxMmr32
                    createdAt: '2022-12-31T12:00:00.0000000Z'
                    status: Created
                backupPreferences:
                  slots: 4
                  frequency: OneDay
                cost:
                  pricePerHour: 0.014004
                  pricePerMonthApprox: 10.22292
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/ke8vlrXPjxO1oq3m\""
    delete:
      tags:
        - Servers
      summary: Delete server
      description: "You can use the delete server endpoint to permanently delete a server. \r\n                            If you delete a server with backups, the backups will be retained for another 24 hours after\r\n                            which they will be deleted."
      operationId: DeleteServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '404':
          $ref: '#/components/responses/404'
        '202':
          description: The delete server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: mR2Dn6xgLD9OMPyE
                status: inProgress
                type: delete
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3\""
  /v1/servers/cost:
    post:
      tags:
        - Servers
      summary: Calculate server cost
      description: "An endpoint that calculates the hourly cost of a server based on the flavor, \r\n                            volume, and other selected configurations."
      operationId: CalculateServerCost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateServerCost'
            examples:
              Calculate cost of server:
                value:
                  flavorId: 1x4
                  volume:
                    source: image
                    id: lo1qJ9oZb1xGMEgD
                    ssdGb: 15
                  backupPreferences: 
                  isArchived: 
              Calculate cost of server with backups:
                value:
                  flavorId: 1x4
                  volume:
                    source: image
                    id: lo1qJ9oZb1xGMEgD
                    ssdGb: 15
                  backupPreferences:
                    slots: 4
                    frequency: oneDay
                  isArchived: false
              Calculate cost of archived server:
                value:
                  flavorId: 1x4
                  volume:
                    source: image
                    id: lo1qJ9oZb1xGMEgD
                    ssdGb: 15
                  backupPreferences: 
                  isArchived: true
      responses:
        '200':
          description: The server cost
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCost'
              example:
                pricePerHour: 0.00824
                pricePerMonthApprox: 6.0152
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/servers/cost
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"flavorId\":\"1x4\",\"volume\":{\"source\":\"image\",\"id\":\"lo1qJ9oZb1xGMEgD\",\"ssdGb\":15},\"backupPreferences\":null,\"isArchived\":null}' \\\r\n\"https://api.clouding.io/v1/servers/cost\""
  '/v1/servers/{id}/rename':
    patch:
      tags:
        - Servers
      summary: Rename server
      description: This endpoint can be used to change the server name.
      operationId: RenameServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameRequest'
            example:
              newServerName: new-server-name
      responses:
        '204':
          description: The server name has been changed and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/rename'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X PATCH \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"newServerName\":\"new-server-name\"}' \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/rename\""
  '/v1/servers/{id}/resize':
    post:
      tags:
        - Servers
      summary: Resize server
      description: "The resize server endpoint allows you to change the flavor and/or volume of the server.\r\n                             The flavor of the server can be changed freely, while the volume size should always \r\n                             be equal to or greater than the current volume."
      operationId: ResizeServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        description: The request to change the server's flavor and/or increase the volume size.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeServerRequest'
            examples:
              Resize both flavor and volume:
                value:
                  flavorId: 1x2
                  volumeSizeGb: 10
              Resize only the flavor:
                value:
                  flavorId: 1x2
              Resize only the volume:
                value:
                  volumeSizeGb: 10
      responses:
        '202':
          description: The resize server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: awqYZWO4njxQyOV0
                status: inProgress
                type: resize
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/resize'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"flavorId\":\"1x2\",\"volumeSizeGb\":10}' \\\r\n\"https://api.clouding.io/v1/servers/{id}/resize\""
  '/v1/servers/{id}/start':
    post:
      tags:
        - Servers
      summary: Start server
      description: 'A POST endpoint that starts a server and returns an [action](#section/Introduction/Long-running-actions).'
      operationId: StartServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The start server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: start
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/start'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/start\""
  '/v1/servers/{id}/stop':
    post:
      tags:
        - Servers
      summary: Stop server
      description: 'A POST endpoint that stops a server and returns an [action](#section/Introduction/Long-running-actions).'
      operationId: StopServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The stop server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: stop
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/stop'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/stop\""
  '/v1/servers/{id}/reboot':
    post:
      tags:
        - Servers
      summary: Reboot server
      description: 'A POST endpoint that reboots a server and returns an [action](#section/Introduction/Long-running-actions).'
      operationId: RebootServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The reboot server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: reboot
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/reboot'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/reboot\""
  '/v1/servers/{id}/hard-reboot':
    post:
      tags:
        - Servers
      summary: Hard reboot server
      description: 'A POST endpoint that forces a server to reboot and returns an [action](#section/Introduction/Long-running-actions).'
      operationId: HardRebootServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The created action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: reboot
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/hard-reboot'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/hard-reboot\""
  '/v1/servers/{id}/archive':
    post:
      tags:
        - Servers
      summary: Archive server
      description: "A POST endpoint that archives a server and returns an [action](#section/Introduction/Long-running-actions).\r\n                    An archived server is a virtual machine instance that has been turned off and is removed from the hypervisor, but is still stored and can be restored if needed.\r\n                    As a result, archived servers are only charged for the storage space they consume."
      operationId: ArchiveServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The archive server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: archive
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/archive'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/archive\""
  '/v1/servers/{id}/unarchive':
    post:
      tags:
        - Servers
      summary: Unarchive server
      description: 'A POST endpoint that unarchives a server and starts it. It returns an [action](#section/Introduction/Long-running-actions).Unarchiving a server refers to the process of restoring a previously archived virtual machine instance to a running state.'
      operationId: UnarchiveServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The unarchive server action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: unarchive
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/unarchive'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/unarchive\""
  '/v1/servers/{id}/allow-smtp-out':
    post:
      tags:
        - Servers
      summary: Allow server SMTP out
      description: "This endpoint adds the SMTP out feature for the server and returns an [action](#section/Introduction/Long-running-actions). \r\nAllowing SMTP (Simple Mail Transfer Protocol) out for a server refers to the process of allowing the server to send email messages.\r\n\r\n> By default all servers have this feature blocked."
      operationId: AllowServerSmtpOut
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The allow smtp out action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: allow-smtp-out
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/allow-smtp-out'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/allow-smtp-out\""
  '/v1/servers/{id}/block-smtp-out':
    post:
      tags:
        - Servers
      summary: Block server SMTP out
      description: "This endpoint removes the SMTP out feature for the server and returns an [action](#section/Introduction/Long-running-actions). \r\nBlocking SMTP (Simple Mail Transfer Protocol) out for a server refers to the process of preventing the server from sending email messages.\r\n\r\n> By default all servers have this feature blocked."
      operationId: BlockServerSmtpOut
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The block smtp out action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: block-smtp-out
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/block-smtp-out'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/block-smtp-out\""
  '/v1/servers/{id}/enable-private-network':
    post:
      tags:
        - Servers
      summary: Enable server private network
      description: "This endpoint enables the private network for the server and returns an [action](#section/Introduction/Long-running-actions).\r\n                Enabling a private network for a server refers to the process of allowing the server to communicate with other servers within an isolated network. \r\n                Private networks are often used to protect sensitive data and systems, and to ensure that communications between servers are secure and protected from external threats."
      operationId: EnableServerPrivateNetwork
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '404':
          $ref: '#/components/responses/404'
        '202':
          description: The enable private network action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: enable-private-network
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/enable-private-network'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/enable-private-network\""
  '/v1/servers/{id}/disable-private-network':
    post:
      tags:
        - Servers
      summary: Disable server private network
      description: "This endpoint disables the private network for the server and returns an [action](#section/Introduction/Long-running-actions).\r\n                Disabling a private network for a server refers to the process of preventing the server from communicating with other servers within an isolated network"
      operationId: DisableServerPrivateNetwork
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The disable private network action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: disable-private-network
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/disable-private-network'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/disable-private-network\""
  '/v1/servers/{id}/password':
    get:
      tags:
        - Servers
      summary: Retrieve server password
      description: "The retrieve server password endpoint can be used to retrieve the current server password.\r\n                            You will not be able to retrieve the password if you manually changed it from within the server,\r\n                            or if you have uninstalled or modified the configuration of QEMU Agent on your server.\r\n                            <a href=\"https://help.clouding.io/hc/en-us/articles/4846141055644\" target=\"_blank\">More information</a>."
      operationId: RetrieveServerPassword
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The server password
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPassword'
              example:
                password: my-password
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/password'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/password\""
    post:
      tags:
        - Servers
      summary: Reset server password
      description: "With this request, the password of the server can be reset or changed. \r\nThe functionality of the this request depends on the image that was used to create the server. \r\nIf the providing the password is not supported, a new random password will be generated.\r\n\r\nIf you have uninstalled or modified the configuration of QEMU Agent on your server the password cannot be changed. \r\n<a href=\"https://help.clouding.io/hc/en-us/articles/4846141055644\" target=\"_blank\">More information</a>."
      operationId: ResetServerPassword
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            example:
              password: apassword!!
              savePassword: false
      responses:
        '202':
          description: The reset password action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: awqYZWO4OJxQyOV0
                status: inProgress
                type: reset-password
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/password'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"password\":\"apassword!!\",\"savePassword\":false}' \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/password\""
  '/v1/servers/{id}/backups':
    post:
      tags:
        - Servers
      summary: Configure server backups
      description: "The configure server backups endpoint allows you to enable or change the backup configuration of the server.\r\n                The backup configuration refers to the settings used to determine the frequency of backups creation and the and number of backups (slots) to keep."
      operationId: ConfigureServerBackups
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureBackupsRequest'
            example:
              slots: 4
              frequency: oneDay
      responses:
        '202':
          description: The configure backups action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: a7BmZXbzLDXe2Mjn
                status: inProgress
                type: configure-backups
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/backups'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"slots\":4,\"frequency\":\"oneDay\"}' \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/backups\""
    delete:
      tags:
        - Servers
      summary: Disable server backups
      description: "This endpoint disables the backup configuration for the server and returns an [action](#section/Introduction/Long-running-actions).\r\n                            Disabling backups refers to the process of stopping the creation of backups for a server. \r\n                            All created backups will be deleted."
      operationId: DisableServerBackups
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The disable backups action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: R2Dn6xglED9OMPyE
                status: inProgress
                type: disable-backups
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/backups'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/backups\""
  '/v1/servers/{id}/backup/{backupId}/restore':
    post:
      tags:
        - Servers
      summary: Restore server backup
      description: "This POST endpoint can be used to restore a backup to the server \r\n                            and returns an [action](#section/Introduction/Long-running-actions)."
      operationId: RestoreServerBackup
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: backupId
          in: path
          description: The unique identifier of the backup.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupRequest'
            example:
              startServerAfterRestore: true
      responses:
        '202':
          description: The restore backup action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: d8v0nXJjJkX24ray
                status: inProgress
                type: restore-backup
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/backup/{backupid}/restore'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"startServerAfterRestore\":true}' \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/backup/K0YpkWVYRoXJB1zg/restore\""
  '/v1/servers/{id}/snapshot':
    post:
      tags:
        - Servers
      summary: Snapshot server
      description: "The snapshot server endpoint allows you to create a snapshot of the volume of the server.\r\n                        A server snapshot is a point-in-time copy of the current state of a server, including its data, configurations, and settings. \r\n                        It is essentially a \"picture\" of the server at a specific moment in time, which can be used to restore the server to that state or create a new server with that state."
      operationId: SnapshotServer
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerSnapshotRequest'
            example:
              shutdownServer: true
              name: snapshot-01
              description: my snapshot description
      responses:
        '202':
          description: The create snapshot action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: awqYZWO4njxQyOV0
                status: inProgress
                type: snapshot
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/snapshot'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"shutdownServer\":true,\"name\":\"snapshot-01\",\"description\":\"my snapshot description\"}' \\\r\n\"https://api.clouding.io/v1/servers/R2Dn6xgQp4XOMPyE/snapshot\""
  '/v1/servers/{id}/snapshot/{snapshotId}/restore':
    post:
      tags:
        - Servers
      summary: Restore server snapshot
      description: The restore server snapshot endpoint allows you to restore a snapshot to the volume of the server.
      operationId: RestoreServerSnapshot
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: snapshotId
          in: path
          description: The unique identifier of the snapshot.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '202':
          description: The restore snapshot action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: awqYZWO4njxQyOV0
                status: inProgress
                type: restore-snapshot
                startedAt: '2023-01-03T12:00:00.0000000Z'
                completedAt: 
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/snapshot/{snapshotid}/restore'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/R2Dn6xgQp4XOMPyE/snapshot/ZPlL0kxDyR9Q3Yb5/restore\""
  '/v1/servers/{id}/novnc':
    get:
      tags:
        - Servers
      summary: Get noVNC console url
      description: "A GET endpoint that retrieves a NoVNC HTML5 console for a server, \r\n                            allowing a user to remotely access the server."
      operationId: GetNoVNCConsoleUrl
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The noVNC console url
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoVNC'
              example:
                url: https://console.clouding.io/vnc_auto.html?token=8a1f0037-bf74-4928-831e-cfd3662fb4c9
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/novnc'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/novnc\""
  '/v1/servers/{id}/actions':
    get:
      tags:
        - Servers
      summary: List all server actions
      description: "The list all server actions endpoint allows you to retrieve a list of all long-running operations \r\n                            or \"actions\" that have been initiated for the server."
      operationId: ListAllServerActions
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of actions.
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActionList'
              example:
                actions:
                  - id: K0YpkWVYRoXJB1zg
                    status: completed
                    type: reboot
                    startedAt: '2023-01-03T10:00:00.0000000Z'
                    completedAt: '2023-01-03T10:00:10.0000000Z'
                    resourceId: 7y1OZWl2ZE9mk6l3
                    resourceType: server
                  - id: 7y1OZWlOQgXmk6l3
                    status: completed
                    type: start
                    startedAt: '2023-01-01T12:00:00.0000000Z'
                    completedAt: '2023-01-01T12:00:05.0000000Z'
                    resourceId: 7y1OZWl2ZE9mk6l3
                    resourceType: server
                links:
                  next: https://api.clouding.io/v1/servers/7y1ozwl2ze9mk6l3/actions?page=2&pagesize=2
                  previous: 
                meta:
                  total: 10
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/actions'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/actions?page=1&pageSize=2\""
  '/v1/servers/{id}/actions/{actionId}':
    get:
      tags:
        - Servers
      summary: Get server action by id
      description: The get server action by id endpoint allows you to retrieve information about a specific action of the server.
      operationId: GetServerActionById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: actionId
          in: path
          description: The unique identifier of the action.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: An action
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
              example:
                id: K0YpkWVYRoXJB1zg
                status: completed
                type: reboot
                startedAt: '2023-01-03T10:00:00.0000000Z'
                completedAt: '2023-01-03T10:00:10.0000000Z'
                resourceId: 7y1OZWl2ZE9mk6l3
                resourceType: server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/actions/{actionid}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/7y1OZWl2ZE9mk6l3/actions/K0YpkWVYRoXJB1zg\""
  '/v1/servers/{id}/firewall/{firewallId}/attach':
    post:
      tags:
        - Servers
      summary: Attach firewall
      description: The attach firewall endpoint can be used to attach a firewall profile to the server.
      operationId: AttachFirewall
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: firewallId
          in: path
          description: The unique identifier of the firewall.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall was attached and there is no response body.
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/firewall/{firewallid}/attach'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/R2Dn6xgQp4XOMPyE/firewall/JLB82xyP8aWOrqeN/attach\""
  '/v1/servers/{id}/firewall/{firewallId}/detach':
    post:
      tags:
        - Servers
      summary: Detach firewall
      description: The detach firewall endpoint can be used to remove a firewall profile from the server.
      operationId: DetachFirewall
      parameters:
        - name: id
          in: path
          description: The unique identifier of the server.
          required: true
          schema:
            type: string
            format: ''
        - name: firewallId
          in: path
          description: The unique identifier of the firewall.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall was detached and there is no response body.
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/servers/{id}/firewall/{firewallid}/detach'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/servers/R2Dn6xgQp4XOMPyE/firewall/JLB82xyP8aWOrqeN/detach\""
  /v1/keypairs:
    get:
      tags:
        - SSH Keys
      summary: List all SSH keys
      description: The endpoint for listing all SSH keys.
      operationId: ListAllSSHKeys
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of SSH keys
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeypairList'
              example:
                values:
                  - id: Dd8v0nXJ1924rayY
                    fingerprint: a6:92:c9:0a:c4:ca:7d:2c:fb:98:42:63:79:37:a8:24
                    name: my-ssh-key-without-private-key
                    publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEc2hHw894iG/BULKSwdJceqLG8qGoifKfCVNTkFJgILn7dnJg7ioWtzpztaWCiwJe7R2zVF68ANi0+Ie8UM70/MFk5WKB1mOC7k85HCT8jXRM4F5zhnwYKLmVkGiYQHUchp2RgmKNxdcoJNOfYnvZL0dWZvnrl/M0J3vTmw/xXmqqsbjBI1v5EXvjCYiwyLgZ6ZIcOyDgYFbZj6/YAVpQEaFzmwZSlOFL8AC7YTh2uFYu1hxKOOOVJrAd4/kBXUnd1SqOyj4lPlQ7RMTym9viFkfUisIZOFWQMCIPJrrc4qba5qjHmErpamFGGC7QuFa0bBs6Newq3Qj4mUWBSYC7
                    hasPrivateKey: false
                  - id: N3V2ryXQjWa6pvok
                    fingerprint: 34:30:10:19:20:2a:b0:db:7a:0a:9b:e6:40:60:d3:10
                    name: my-ssh-key-with-private-key
                    publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/JsvU94jIF0r5auf1dP/EBK00In7Xn5EEpZBRGBzF3gjtnOniYy1pHHm+ppOHv/0lNFQDgFs5d3Gw5fi4j8Udf99bmKY4LALUrXY+G2aruZjh+eb/VS9sButUG185XHuMpCeqDHCpM8nzNyIjNgUWRd2URQ2xHTLMeVjBrWdXmc7iuIGENs59FMFdX6sAlY7vUPjYboF+8RnvHPEvLrEjxB9Fv55qMg1Q9BiI+s3Bp5ZW+fFrtoEHxm6NX3BII4ZSLGqfGtv0mPjKh81vSgZc5GPvH0L+R8iBkfS3wgwPWw4BilC3/5p+ByDblD7dRmJWD1yUurSsAS+y3CpgXdY7
                    hasPrivateKey: true
                links:
                  next: https://api.clouding.io/v1/keypairs?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/keypairs
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/keypairs?page=1&pageSize=2\""
    post:
      tags:
        - SSH Keys
      summary: Create SSH key
      description: "The create SSH key endpoint allows for the creation and storage of public and private SSH keys. \r\nThe endpoint accepts the public key as a required parameter and the private key as an optional parameter."
      operationId: CreateSSHKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddKeypair'
            examples:
              Create without private key:
                value:
                  name: my-ssh-key-without-private
                  publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmDTWnz2hR4byvUr9a2vaOW5BuArZorY60Sk7CfFgeay4oIMDTRWURQaFKWc5NqiE/Q/cvWO8MOo6v0ji7OzNysERRic6NoaS0kEY7gjFvyvvojU6jHN8yBogEmLKCdt4OY3LqJ1FV4ptqRovOJyxanNnEpJBrbkFxzPP5N3n/WGuXRN9KFSJXp76NTVQ68tfCB4bmkXQyhWbFKKkVKqUyPlVVEGVuCMGVw6GvSdz/meIaVdDpJSmhEm5KX5Mv4mg6udRJS5N+Bzq4iVkBDQUSf5nMZwH32volP07nnCvgGNENmcJMiMkUV4L5uUFOqUhgPyj/6kxwkEyzG974C6K5
                  privateKey: 
              Create with private key:
                value:
                  name: my-ssh-key-with-private
                  publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/JsvU94jIF0r5auf1dP/EBK00In7Xn5EEpZBRGBzF3gjtnOniYy1pHHm+ppOHv/0lNFQDgFs5d3Gw5fi4j8Udf99bmKY4LALUrXY+G2aruZjh+eb/VS9sButUG185XHuMpCeqDHCpM8nzNyIjNgUWRd2URQ2xHTLMeVjBrWdXmc7iuIGENs59FMFdX6sAlY7vUPjYboF+8RnvHPEvLrEjxB9Fv55qMg1Q9BiI+s3Bp5ZW+fFrtoEHxm6NX3BII4ZSLGqfGtv0mPjKh81vSgZc5GPvH0L+R8iBkfS3wgwPWw4BilC3/5p+ByDblD7dRmJWD1yUurSsAS+y3CpgXdY7
                  privateKey: "-----BEGIN RSA PRIVATE KEY-----\r\nMIIEqAIBAAKCAQEAvybL1PeIyBdK+Wrn9XT/xAStNCJ+15+RBKWQURgcxd4I7Zzp\r\n4mMtaRx5vqaTh7/9JTRUA4BbOXdxsOX4uI/FHX/fW5imOCwC1K12Phtmq7mY4fnm\r\n/1UvbAbrVBtfOVx7jKQnqgxwqTPJ8zciIzYFFkXdlEUNsR0yzHlYwa1nV5nO4riB\r\nhDbOfRTBXV+rAJWO71D42G6BfvEZ7xzxLy6xI8QfRb+eajINUPQYiPrNwaeWVvnx\r\na7aBB8ZujV9wSCOGUixqnxrb9Jj4yofNb0oGXORj7x9C/kfIgZH0t8IMD1sOAYpQ\r\nt/+afgcg25Q+3UZiVg9clLq0rAEvstwqYF3WOwIDAQABAoIBAAbdq+Cga4dUXtsK\r\nnf5RD4bI7De9LXUtRBY4pDBlf1MUIJn4UuZQzabC4RSaAx6TJNKbSJE/oQc1ZR4H\r\nhKGMeHYQy8MMfpvx6MAe4upkLZHpfrZPNZ7iPmvQ687/lLIIwl9Q3iPbgohxVcWo\r\nq088d35PUCAtQsqj09lIWonKYrXgvmp6NL3ejE+Ubwf3UcOOA8YlvfqjFPBjMkkw\r\nYSFHatgL/ogKEedY3AVlEa2KHUjpeu0ANtBEOXwFerIALzFf5G0XKC38nyws6sH3\r\nzTHm5026gk09QfKo0a8B/82TDf/NOV/zRaZMdeajElkqOch2VQZLK1KcjJkohS7V\r\nKPlDx4ECggCBAMLM8PDSV2o5caa7F6DM7mPrPkVXKbs/Xzs2/D0E9mMhEE+Z6v27\r\n26y6nNwcEKiJ7wi1M2xhkukgmJ2AqdvqZozae3Ix2EQRO8CO0tvePncHAXVvpkMM\r\nD2D6FYVbySgut6uts+voD+83UHrHwG+Vz/ZefKT0o5NH+2Yx6VlozFQbAoIAgQD7\r\nNGE05pXbOVVjq9A5vVsdg11KaQKzKnUWI++7KYIGSwoYv47Qz/edddB8Tg1KhDLO\r\nnN3QBovN0RtAP/GypZ0F+c2K5hqqElW5HaF1n2O8EnsuCTMNcLkg3CD+9QAdNHYE\r\nBXdjjc23jfLKKDXMz9LqfDp0AYuUeyx3JAms0MVoYQKCAIA80hwQNLxSUCkp85RH\r\nAnUUAWjp4XMIIZssM9jBfIEpJjOfhuEV48eMwJ8lIiYZWSemwlyR5E0oOKMt2fQu\r\n05q9M6IDX4i0h+TuFCnFuDgslaVg80EoAeXzU2HQx32g7CUwlwVsDIKdH9oi26c7\r\nr7zEoW+tWSyRWZImsEK5Rb02LQKCAIEAyEGQgJCVxGbnWIa+f1khytxPQaOHIHdn\r\nUdgiI61KV2P4z5Pd8T7pIeCq7H14gP/0VNuexFiDmPbq54RSVN1L2Viz79fSR+RH\r\n7EPf1BnVcze0dRWmWj+ThcuWjkmX5rBMqJYHABkqdvq1I0183iKK/J0+J/6XXC35\r\nW50iDV99D+ECggCASGNIPd+XyUu1zWwS64LRW+jwxV07qaqAKmo0b3GXBx7u/HGD\r\nxg1pbZr3Rt0ckEjsOEnsyZKTS8k7Ugpqc2suObsls8BxaCIaRRMAoW2z3Svy1HWP\r\nWCzz0FLA9AmGp/5VKGq3/7gjoVYLYbVcrwKaW+lAA7bI/HTSS4WDjzBv7NY=\r\n-----END RSA PRIVATE KEY-----"
      responses:
        '201':
          description: The created SSH key
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKeyDetails'
              examples:
                my-ssh-key-without-private-key:
                  value:
                    id: Dd8v0nXJ1924rayY
                    name: my-ssh-key-without-private-key
                    fingerprint: a6:92:c9:0a:c4:ca:7d:2c:fb:98:42:63:79:37:a8:24
                    publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEc2hHw894iG/BULKSwdJceqLG8qGoifKfCVNTkFJgILn7dnJg7ioWtzpztaWCiwJe7R2zVF68ANi0+Ie8UM70/MFk5WKB1mOC7k85HCT8jXRM4F5zhnwYKLmVkGiYQHUchp2RgmKNxdcoJNOfYnvZL0dWZvnrl/M0J3vTmw/xXmqqsbjBI1v5EXvjCYiwyLgZ6ZIcOyDgYFbZj6/YAVpQEaFzmwZSlOFL8AC7YTh2uFYu1hxKOOOVJrAd4/kBXUnd1SqOyj4lPlQ7RMTym9viFkfUisIZOFWQMCIPJrrc4qba5qjHmErpamFGGC7QuFa0bBs6Newq3Qj4mUWBSYC7
                    hasPrivateKey: false
                my-ssh-key-with-private-key:
                  value:
                    id: N3V2ryXQjWa6pvok
                    name: my-ssh-key-with-private-key
                    fingerprint: 34:30:10:19:20:2a:b0:db:7a:0a:9b:e6:40:60:d3:10
                    publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/JsvU94jIF0r5auf1dP/EBK00In7Xn5EEpZBRGBzF3gjtnOniYy1pHHm+ppOHv/0lNFQDgFs5d3Gw5fi4j8Udf99bmKY4LALUrXY+G2aruZjh+eb/VS9sButUG185XHuMpCeqDHCpM8nzNyIjNgUWRd2URQ2xHTLMeVjBrWdXmc7iuIGENs59FMFdX6sAlY7vUPjYboF+8RnvHPEvLrEjxB9Fv55qMg1Q9BiI+s3Bp5ZW+fFrtoEHxm6NX3BII4ZSLGqfGtv0mPjKh81vSgZc5GPvH0L+R8iBkfS3wgwPWw4BilC3/5p+ByDblD7dRmJWD1yUurSsAS+y3CpgXdY7
                    hasPrivateKey: true
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/keypairs
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"name\":\"my-ssh-key-without-private\",\"publicKey\":\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmDTWnz2hR4byvUr9a2vaOW5BuArZorY60Sk7CfFgeay4oIMDTRWURQaFKWc5NqiE/Q/cvWO8MOo6v0ji7OzNysERRic6NoaS0kEY7gjFvyvvojU6jHN8yBogEmLKCdt4OY3LqJ1FV4ptqRovOJyxanNnEpJBrbkFxzPP5N3n/WGuXRN9KFSJXp76NTVQ68tfCB4bmkXQyhWbFKKkVKqUyPlVVEGVuCMGVw6GvSdz/meIaVdDpJSmhEm5KX5Mv4mg6udRJS5N+Bzq4iVkBDQUSf5nMZwH32volP07nnCvgGNENmcJMiMkUV4L5uUFOqUhgPyj/6kxwkEyzG974C6K5\",\"privateKey\":null}' \\\r\n\"https://api.clouding.io/v1/keypairs\""
  '/v1/keypairs/{id}':
    get:
      tags:
        - SSH Keys
      summary: Get SSH key by id
      description: The get SSH key endpoint allows retrieving a specific SSH key by its unique identifier.
      operationId: GetSSHKeyById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the SSH key.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The SSH key
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKeyDetails'
              example:
                id: Dd8v0nXJ1924rayY
                name: my-ssh-key-without-private-key
                fingerprint: a6:92:c9:0a:c4:ca:7d:2c:fb:98:42:63:79:37:a8:24
                publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEc2hHw894iG/BULKSwdJceqLG8qGoifKfCVNTkFJgILn7dnJg7ioWtzpztaWCiwJe7R2zVF68ANi0+Ie8UM70/MFk5WKB1mOC7k85HCT8jXRM4F5zhnwYKLmVkGiYQHUchp2RgmKNxdcoJNOfYnvZL0dWZvnrl/M0J3vTmw/xXmqqsbjBI1v5EXvjCYiwyLgZ6ZIcOyDgYFbZj6/YAVpQEaFzmwZSlOFL8AC7YTh2uFYu1hxKOOOVJrAd4/kBXUnd1SqOyj4lPlQ7RMTym9viFkfUisIZOFWQMCIPJrrc4qba5qjHmErpamFGGC7QuFa0bBs6Newq3Qj4mUWBSYC7
                hasPrivateKey: false
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/keypairs/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/keypairs/Dd8v0nXJ1924rayY\""
    delete:
      tags:
        - SSH Keys
      summary: Delete SSH key
      description: The delete SSH key endpoint allows you to delete a specific key by providing its identifier. The key cannot be deleted if it is in use.
      operationId: DeleteSSHKey
      parameters:
        - name: id
          in: path
          description: The unique identifier of the SSH key.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The SSH key was deleted and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/keypairs/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/keypairs/jDGPRJXLpGXeV5M1\""
  /v1/keypairs/generate:
    post:
      tags:
        - SSH Keys
      summary: Generate SSH key on the server
      description: An SSH public and private key will be created and stored on the server.
      operationId: GenerateSSHKeyOnTheServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateKeyPair'
            example:
              name: kokos
      responses:
        '201':
          description: The generated SSH key.
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKeyDetails'
              example:
                id: 4K0YpkWV7xJB1zg2
                name: kokos
                fingerprint: e7:02:da:44:78:bf:64:f7:9e:10:ae:9e:2f:1c:92:f2
                publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8N7boViS82O6dRb/1tOGSz5OWpBLQDFD+vWCdtVhB5fnX89r0hGByoRfnRppUU8kJZILO+m2V6x3PN+33r7qIIugq8iVBRUPyjQFlVpdMORBNQRuhjUSPKmNIiIl43U9yqntHwgAsb7StKFMV8poINIONlyaIod4ZKdJGUscPzWJyYd28fPEj8PkbpXlohlY820EfbnxZtlouxTV6epG52/olLXfviz8pnL/3bTjZnKs2YWNEKcDgj4SeaHIsM62vvIcrzAaSMTsVNi8Ql3ol26ejU6Lw0xZ8Ok1EdCqyMBupDstB0fsbJDOR8mc28h48kXafvmIxgdHE2KWac8hb Generated-by-Tsiakkos
                hasPrivateKey: true
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/keypairs/generate
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"name\":\"kokos\"}' \\\r\n\"https://api.clouding.io/v1/keypairs/generate\""
  /v1/images:
    get:
      tags:
        - Images
      summary: List all images
      description: The endpoint for listing all available images including their access methods when used as the source of a new server.
      operationId: ListAllImages
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The images list
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageList'
              example:
                images:
                  - id: lo1qJ9oZb1xGMEgD
                    name: CelestiaOS 2.04 (64 Bit)
                    minimumSizeGb: 5
                    accessMethods:
                      sshKey: optional
                      password: optional
                    pricePerHour: 0
                    pricePerMonthApprox: 0
                    billingUnit: 
                  - id: DGPRJXLAOGWeV5M1
                    name: Galaxion 15 (CelestiaOS 2.04 64Bit)
                    minimumSizeGb: 15
                    accessMethods:
                      sshKey: optional
                      password: required
                    pricePerHour: 0
                    pricePerMonthApprox: 0
                    billingUnit: 
                links:
                  next: https://api.clouding.io/v1/images?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/images
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/images?page=1&pageSize=2\""
  '/v1/images/{id}':
    get:
      tags:
        - Images
      summary: Get image by id
      description: The get image by id endpoint allows retrieving a specific image and its access methods by providing the image's unique identifier.
      operationId: GetImageById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the image.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The image
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
              example:
                id: d3mKbx4zd3XEQaqP
                name: Quantum Nova OS (English 64Bit)
                minimumSizeGb: 25
                accessMethods:
                  sshKey: required-with-private-key
                  password: not-supported
                pricePerHour: 0.00684
                pricePerMonthApprox: 4.9932
                billingUnit: Core
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/images/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/images/d3mKbx4zd3XEQaqP\""
  /v1/firewalls:
    get:
      tags:
        - Firewalls
      summary: List all firewalls
      description: The endpoint for listing all firewalls including their associated rules and the servers they are attached on.
      operationId: ListAllFirewalls
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The firewall list
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallList'
              example:
                values:
                  - id: LywOkvx5LWAp28NP
                    name: Allow all private traffic
                    description: Allow traffic from all private subnets
                    rules:
                      - id: Dd8v0nXJ1924rayY
                        description: Allow TCP for private subnet 10.0.0.0/8
                        protocol: tcp
                        portRangeMin: 1
                        portRangeMax: 65535
                        sourceIp: 10.0.0.0/8
                        enabled: true
                      - id: N3V2ryXQjWa6pvok
                        description: Allow TCP for private subnet 192.168.0.0/16
                        protocol: tcp
                        portRangeMin: 1
                        portRangeMax: 65535
                        sourceIp: 192.168.0.0/16
                        enabled: true
                      - id: 2OM84qx6aWdz7JGr
                        description: Allow TCP for private subnet 172.16.0.0/12
                        protocol: tcp
                        portRangeMin: 1
                        portRangeMax: 65535
                        sourceIp: 172.16.0.0/12
                        enabled: true
                    attachments:
                      - serverId: Q7y1OZWlVn9mk6l3
                        serverName: internal-server
                  - id: 7y1OZWl2bn9mk6l3
                    name: Allow all HTTP/s
                    description: Allow all HTTP and HTTPS traffic
                    rules:
                      - id: m1LrZ3W8exDzN60o
                        description: Allow SSH
                        protocol: tcp
                        portRangeMin: 80
                        portRangeMax: 80
                        sourceIp: 0.0.0.0/0
                        enabled: true
                      - id: m1LrZ3W8exDzN60o
                        description: Allow SSH
                        protocol: tcp
                        portRangeMin: 443
                        portRangeMax: 443
                        sourceIp: 0.0.0.0/0
                        enabled: true
                    attachments:
                      - serverId: 7y1OZWl26769mk6l
                        serverName: web.example.com
                      - serverId: Q7y1OZWlVn9mk6l3
                        serverName: internal-server
                links:
                  next: https://api.clouding.io/v1/firewalls?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/firewalls
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls?page=1&pageSize=2\""
    post:
      tags:
        - Firewalls
      summary: Create firewall
      description: The create firewall endpoint allows you to create a new firewall without any rules.
      operationId: CreateFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewall'
            example:
              name: My firewall
              description: A firewall that restricts network accesses to my server
      responses:
        '201':
          description: The new firewall profile
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firewall'
              example:
                id: ZPlL0kxDYQ9Q3Yb5
                name: My firewall
                description: A firewall that restricts network accesses to my server
                rules: [ ]
                attachments: [ ]
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/firewalls
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"name\":\"My firewall\",\"description\":\"A firewall that restricts network accesses to my server\"}' \\\r\n\"https://api.clouding.io/v1/firewalls\""
  '/v1/firewalls/{id}':
    get:
      tags:
        - Firewalls
      summary: Get firewall by id
      description: The get firewall endpoint allows retrieving a specific firewall and its associated rules by providing the firewall's unique identifier.
      operationId: GetFirewallById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the firewall.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The firewall profile
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firewall'
              example:
                id: LywOkvx5LWAp28NP
                name: Allow all private traffic
                description: Allow traffic from all private subnets
                rules:
                  - id: Dd8v0nXJ1924rayY
                    description: Allow TCP for private subnet 10.0.0.0/8
                    protocol: tcp
                    portRangeMin: 1
                    portRangeMax: 65535
                    sourceIp: 10.0.0.0/8
                    enabled: true
                  - id: N3V2ryXQjWa6pvok
                    description: Allow TCP for private subnet 192.168.0.0/16
                    protocol: tcp
                    portRangeMin: 1
                    portRangeMax: 65535
                    sourceIp: 192.168.0.0/16
                    enabled: true
                  - id: 2OM84qx6aWdz7JGr
                    description: Allow TCP for private subnet 172.16.0.0/12
                    protocol: tcp
                    portRangeMin: 1
                    portRangeMax: 65535
                    sourceIp: 172.16.0.0/12
                    enabled: true
                attachments:
                  - serverId: Q7y1OZWlVn9mk6l3
                    serverName: internal-server
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/LywOkvx5LWAp28NP\""
    patch:
      tags:
        - Firewalls
      summary: Update firewall
      description: The update firewall endpoint is used to modify an existing firewall's name and/or description.
      operationId: UpdateFirewall
      parameters:
        - name: id
          in: path
          description: The unique identifier of the firewall.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewall'
            example:
              newName: the-new-name
              newDescription: The new description of the firewall
      responses:
        '204':
          description: The firewall was updated and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X PATCH \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"newName\":\"the-new-name\",\"newDescription\":\"The new description of the firewall\"}' \\\r\n\"https://api.clouding.io/v1/firewalls/mYaRvlx1OmXApk6N\""
    delete:
      tags:
        - Firewalls
      summary: Delete firewall
      description: The delete firewall endpoint allows you to delete a specific firewall by providing its identifier.
      operationId: DeleteFirewall
      parameters:
        - name: id
          in: path
          description: The unique identifier of the firewall.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall was deleted and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/mYaRvlx1OmXApk6N\""
  '/v1/firewalls/rules/{id}':
    get:
      tags:
        - Firewalls
      summary: Get firewall rule by id
      description: The endpoint for retrieving a firewall rule based on its unique identifier.
      operationId: GetFirewallRuleById
      parameters:
        - name: id
          in: path
          description: The unique identifier of the firewall rule.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '200':
          description: The firewall rule
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleResponse'
              example:
                firewallRule:
                  id: 2OM84qx6aWdz7JGr
                  description: Allow TCP for private subnet 172.16.0.0/12
                  protocol: tcp
                  portRangeMin: 1
                  portRangeMax: 65535
                  sourceIp: 172.16.0.0/12
                  enabled: true
                firewallId: m1LrZ3W8exDzN60o
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/rules/{id}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/rules/2OM84qx6aWdz7JGr\""
  '/v1/firewalls/{id}/rules':
    post:
      tags:
        - Firewalls
      summary: Create firewall rule
      description: The create firewall rule endpoint allows you to create a new firewall rule to allow or block incoming traffic based on a set of conditions.
      operationId: CreateFirewallRule
      parameters:
        - name: id
          in: path
          description: The unique identifier of the firewall of the new rule.
          required: true
          schema:
            type: string
            format: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRule'
            examples:
              Allow TCP for private subnet 10.0.0.0/8:
                value:
                  sourceIp: 10.0.0.0/8
                  protocol: tcp
                  description: Allow TCP for private subnet 10.0.0.0/8
                  portRangeMin: 1
                  portRangeMax: 65535
              Allow ICMP:
                value:
                  sourceIp: 0.0.0.0/0
                  protocol: icmp
                  description: Allow ICMP
                  portRangeMin: 
                  portRangeMax: 
              Allow SSH:
                value:
                  sourceIp: 0.0.0.0/0
                  protocol: tcp
                  description: Allow SSH
                  portRangeMin: 22
                  portRangeMax: 22
              Allow Generic Routing Encapsulation (GRE):
                value:
                  sourceIp: 0.0.0.0/0
                  protocol: '47'
                  description: Allow Generic Routing Encapsulation (GRE)
                  portRangeMin: 
                  portRangeMax: 
      responses:
        '201':
          description: The new firewall rule
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewFirewallRule'
              example:
                id: eAMVoaXqP9BLJwR6
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/{id}/rules'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n-d '{\"sourceIp\":\"10.0.0.0/8\",\"protocol\":\"tcp\",\"description\":\"Allow TCP for private subnet 10.0.0.0/8\",\"portRangeMin\":1,\"portRangeMax\":65535}' \\\r\n\"https://api.clouding.io/v1/firewalls/wJLB82xyPWOrqeN6/rules\""
  '/v1/firewalls/rules/{ruleId}/enable':
    post:
      tags:
        - Firewalls
      summary: Enable firewall rule
      description: "This endpoint allows you to re-enable a previously disabled firewall rule. \r\n                        When a rule is re-enabled, it once again begins to enforce the specified restrictions on network traffic."
      operationId: EnableFirewallRule
      parameters:
        - name: ruleId
          in: path
          description: The firewall rule unique identifier.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall rule was enabled and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/rules/{ruleid}/enable'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/rules/AMVoaXqEQRXBLJwR/enable\""
  '/v1/firewalls/rules/{ruleId}/disable':
    post:
      tags:
        - Firewalls
      summary: Disable firewall rule
      description: "This endpoint allows you to disable a specific firewall rule. \r\n                        When a rule is disabled, it is no longer enforced, meaning that traffic matching the rule's criteria can flow in and out of the network without being blocked."
      operationId: DisableFirewallRule
      parameters:
        - name: ruleId
          in: path
          description: The firewall rule unique identifier.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall rule was disabled and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/rules/{ruleid}/disable'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X POST \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/rules/AMVoaXqEQRXBLJwR/disable\""
  '/v1/firewalls/rules/{ruleId}':
    delete:
      tags:
        - Firewalls
      summary: Delete firewall rule
      description: The delete firewall by id endpoint allows you to delete a specific firewall rule by providing its identifier.
      operationId: DeleteFirewallRule
      parameters:
        - name: ruleId
          in: path
          description: The firewall rule unique identifier.
          required: true
          schema:
            type: string
            format: ''
      responses:
        '204':
          description: The firewall rule was deleted and there is no response body
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/firewalls/rules/{ruleid}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X DELETE \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/firewalls/rules/AMVoaXqEQRXBLJwR\""
  /v1/account/limits:
    get:
      tags:
        - Account
      summary: List all limits
      description: "\r\nThis endpoint allows you to retrieve the limits associated with your account. The response includes information about the maximum capacity or usage restrictions, \r\nas well as the current usage of each resource.\r\n\r\n> If you require additional limits, please contact support."
      operationId: ListAllAccountLimits
      parameters:
        - name: page
          in: query
          description: Which page to retrieve.
          schema:
            minimum: 1
            type: integer
            description: Which page to retrieve.
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page.
          schema:
            maximum: 200
            minimum: 1
            type: integer
            description: The number of items per page.
            format: int32
            default: 20
      responses:
        '200':
          description: The list of account limits
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLimitList'
              example:
                values:
                  - name: server
                    limit: 10
                    usage: 4
                    description: Maximum number of allowed servers
                  - name: snapshot
                    limit: 10
                    usage: 1
                    description: Maximum number of allowed snapshots
                links:
                  next: https://api.clouding.io/v1/account/limits?page=2&pagesize=2
                  previous: 
                meta:
                  total: 3
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: /v1/account/limits
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/account/limits?page=1&pageSize=2\""
  '/v1/account/limits/{name}':
    get:
      tags:
        - Account
      summary: Get limit by name
      description: "\r\nThis endpoint allows you to retrieve a specific limit by name. \r\nThe response provides information about the maximum capacity or usage restrictions along with the current usage.\r\n\r\n> If you require additional limits, please contact support"
      operationId: GetAccountLimitByName
      parameters:
        - name: name
          in: path
          description: The name of the limit.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The account limit
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLimit'
              example:
                name: server
                limit: 10
                usage: 4
                description: Maximum number of allowed servers
        '404':
          $ref: '#/components/responses/404'
        '400':
          description: Bad request
          headers:
            x-rate-limit-limit:
              $ref: '#/components/headers/x-rate-limit-limit'
            x-rate-limit-remaining:
              $ref: '#/components/headers/x-rate-limit-remaining'
            x-rate-limit-reset:
              $ref: '#/components/headers/x-rate-limit-reset'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
              examples:
                400-example:
                  value:
                    title: One or more validation errors occurred.
                    status: 400
                    detail: Please refer to the errors property for additional details.
                    instance: '/v1/account/limits/{name}'
                    traceId: 00000000-0000-0000-0000-000000000000
                    errors:
                      - propertyName:
                          - Validation error1.
                          - Validation error2.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
        '429':
          $ref: '#/components/responses/429'
      security:
        - X-API-KEY: [ ]
      x-codeSamples:
        - lang: shell
          label: cURL
          source: "curl -X GET \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"X-API-KEY: $CLOUDING_APIKEY\" \\\r\n\"https://api.clouding.io/v1/account/limits/server\""
components:
  schemas:
    AccessConfiguration:
      type: object
      properties:
        sshKeyId:
          type: string
          description: "The unique identifier of the SSH key.\r\n            \r\n> *The availability of this method depends on the `accessMethods` of the volume's source.*"
          format: ''
          default: 
          nullable: true
        password:
          type: string
          description: "The password that will be used by the new server.\r\n\r\n> *The availability of this method depends on the `accessMethods` of the volume's source.*"
          default: 
          nullable: true
        savePassword:
          type: boolean
          description: "If `true`, the password will be stored in our database.\r\n\r\nThis will enable password retrieval. If the password is not saved, you will not be able to retrieve your password.\r\nYou will still be able to change the password."
          default: false
      additionalProperties: false
      description: "When creating a server, you need to choose a method to access it. \r\nThe two options are SSH key authentication and password authentication. \r\nThe availability and requirements of these methods depend on the `accessMethods` of the volume's soure."
    AccountLimit:
      type: object
      properties:
        name:
          type: string
          description: A string representing the name or type of the resource.
        limit:
          type: number
          description: Specifies the maximum allowed quantity or capacity.
          format: double
        usage:
          type: number
          description: Represents the current usage or utilization.
          format: double
        description:
          type: string
          description: Additional information related to the specific limit.
      additionalProperties: false
      description: The SSH key details.
    AccountLimitList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/AccountLimit'
          description: A list of limits.
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A list of limits.
    AddKeypair:
      required:
        - name
        - publicKey
      type: object
      properties:
        name:
          minLength: 1
          pattern: '^[a-zA-Z0-9-_]+$'
          type: string
          description: The name of the SSH key.
        publicKey:
          minLength: 1
          pattern: '^ssh-rsa AAAAB3NzaC1yc2E[0-9A-Za-z+\/]+[=]{0,3}(?:$|\s.+)$'
          type: string
          description: The public key of the SSH RSA key.
        privateKey:
          type: string
          description: "The private key of the SSH RSA key. It should be in RSA PEM format.\r\nIf the private key is provided it will be stored in our database.\r\nThe private key can be removed later."
          default: 
          nullable: true
      additionalProperties: false
      description: The request to add a new SSH key.
    Backup:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the backup.
          format: ''
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the backup.
          format: date-time
        serverId:
          type: string
          description: The unique identifier of the origin server.
          format: ''
        serverName:
          type: string
          description: The name of the origin server.
        volumeSizeGb:
          type: integer
          description: The size of the backup in gigabytes.
          format: int32
        image:
          $ref: '#/components/schemas/BackupImageInfo'
      additionalProperties: false
      description: A server backup.
    BackupDescriptor:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the backup.
          format: ''
          readOnly: true
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the backup.
          format: date-time
          readOnly: true
        status:
          type: string
          description: The status of the backup.
          readOnly: true
      additionalProperties: false
    BackupImageInfo:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the image.
          format: ''
        name:
          type: string
          description: The name of the image.
        accessMethods:
          $ref: '#/components/schemas/RestoreServerAccessMethods'
      additionalProperties: false
      description: Basic image information
    BackupList:
      type: object
      properties:
        backups:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
          description: A list of backups.
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A paginated response of backups.
    BackupPreferences:
      type: object
      properties:
        slots:
          maximum: 30
          minimum: 2
          type: integer
          description: The number of backups that will be kept.
          format: int32
        frequency:
          enum:
            - oneDay
            - twoDays
            - threeDays
            - fourDays
            - fiveDays
            - sixDays
            - oneWeek
          type: string
          description: How often backups will be created.
      additionalProperties: false
      description: The backup strategy of the server.
    CalculateServerCost:
      required:
        - flavorId
        - volume
      type: object
      properties:
        flavorId:
          minLength: 1
          type: string
          description: The unique identifier of the flavor.
        volume:
          $ref: '#/components/schemas/CalculateServerCostVolume'
        backupPreferences:
          $ref: '#/components/schemas/BackupPreferences'
        isArchived:
          type: boolean
          description: "Whether the calculation will be made for an archived server.\r\nAn archived server is billed only for the storage space it occupies."
          default: 
          nullable: true
      additionalProperties: false
      description: A request to calculate the cost of a server.
    CalculateServerCostVolume:
      required:
        - id
        - source
        - ssdGb
      type: object
      properties:
        source:
          minLength: 1
          enum:
            - Image
            - Backup
            - Snapshot
            - Server
          type: string
          description: This property is used to specify the source of the volume of the server.
        id:
          minLength: 1
          type: string
          description: "The unique identifier of the source image. \r\nCould be an\r\n[image](#tag/Images/operation/ListAllImages),\r\n[backup](#tag/Backups/operation/ListAllBackups),\r\n[snapshot](#tag/Snapshots/operation/ListAllSnapshots) or\r\n[server](#tag/Servers/operation/ListAllServers)\r\ndepending on the value of `source`."
          format: ''
        ssdGb:
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: The size of the volume in gigabytes.
          format: int32
      additionalProperties: false
      description: The information of the volume that will be used to calculate the cost for this server.
    ConfigureBackupsRequest:
      required:
        - frequency
        - slots
      type: object
      properties:
        slots:
          maximum: 30
          minimum: 2
          type: integer
          description: The number of backups that will be kept.
          format: int32
        frequency:
          minLength: 1
          enum:
            - oneDay
            - twoDays
            - threeDays
            - fourDays
            - fiveDays
            - sixDays
            - oneWeek
          type: string
          description: How often backups will be created.
      additionalProperties: false
      description: The request to configure the backup strategy of a server.
    CreateFirewall:
      required:
        - description
        - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          pattern: '^[a-zA-Z0-9 -]+$'
          type: string
          description: The firewall name. This will be displayed in the UI.
        description:
          maxLength: 512
          minLength: 1
          type: string
          description: The firewall description. This will be displayed in the UI.
      additionalProperties: false
      description: The request to create a new empty firewall profile.
    CreateFirewallRule:
      required:
        - description
        - protocol
        - sourceIp
      type: object
      properties:
        sourceIp:
          minLength: 1
          type: string
          description: The IP or CIDR that the rule will be applied for.
        protocol:
          minLength: 1
          type: string
          description: "A firewall rule protocol is a set of rules and procedures that determine how a firewall handles network traffic.\r\n\r\nSupported protocols are: `ah`,`dccp`,`egp`,`esp`,`gre`,`hopopt`,`icmp`,`igmp`,`ip`,`ipip`,`ospf`,`pgm`,`rsvp`,`sctp`,`tcp`,`udp`,`udplite`,`vrrp`, or any number between 0 and 255 represented as a string."
        description:
          maxLength: 512
          minLength: 1
          type: string
          description: A short description of the rule.
        portRangeMin:
          type: integer
          description: The minimum port of the port range.
          format: int32
          default: 
          nullable: true
        portRangeMax:
          type: integer
          description: The maximum port of the port range.
          format: int32
          default: 
          nullable: true
      additionalProperties: false
      description: The request to create a new firewall rule.
    CreateServer:
      required:
        - accessConfiguration
        - firewallId
        - flavorId
        - hostname
        - name
        - volume
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the server.
        hostname:
          minLength: 1
          type: string
          description: "The hostname of the server. It should be a valid hostname according to the <a href=\"https://www.rfc-editor.org/rfc/rfc1035\" target=\"_blank\">domain names RFC</a>.\r\nThis value cannot be changed."
        flavorId:
          minLength: 1
          type: string
          description: "The identifier of the desired flavor size.\r\nFlavors are pre-defined configurations of CPU and RAM.\r\nThe list of available flavors can be retrieved from the [flavor sizes](#tag/Sizes/operation/ListAllFlavors) endpoint."
        firewallId:
          minLength: 1
          type: string
          description: The identifier of the initial firewall that will be attached to the server. Firewalls can be attached or detached after server creation.
          format: ''
        accessConfiguration:
          $ref: '#/components/schemas/AccessConfiguration'
        volume:
          $ref: '#/components/schemas/Volume'
        enablePrivateNetwork:
          type: boolean
          description: 'If `true`, the server will have second network interface connected to the private network of the user that is isolated from the public internet.'
          default: false
        enableStrictAntiDDoSFiltering:
          type: boolean
          description: "If `true`, <a href=\"https://clouding.zendesk.com/hc/en-us/articles/6310749915036\" target=\"_blank\">strict Anti-DDoS filtering</a> will be enabled, which may impact some network protocols.\r\nIt is only recommended for server under constant DDoS attacks. If your server is not under constant attacks,\r\nwe recommend leaving this option disabled and rely on our standard Anti-DDoS filtering which is always enabled.\r\nThis feature cannot be disabled after the server is created."
          default: false
        userData:
          type: string
          description: "Can be used to specify scripts/commands that the server will execute during the first startup.\r\n<a href=\"https://help.clouding.io/hc/en-us/articles/4801240126620\" target=\"_blank\">More information</a>."
          default: 
          nullable: true
        backupPreferences:
          $ref: '#/components/schemas/BackupPreferences'
      additionalProperties: false
      description: Create server request.
    CreateServerAccessMethods:
      title: AccessMethods
      type: object
      properties:
        sshKey:
          enum:
            - not-supported
            - optional
            - required
            - required-with-private-key
          type: string
          description: "This is a secure way to access your server over the network. \r\nAn SSH key pair consists of a public key and a private key. \r\nWhen the client attempts to connect to the server, the server checks if the public key matches the private key, and if so, grants access.\r\n            \r\n- **not-supported**: Some images may not support SSH key authentication. In such cases, you'll need to use a password instead.\r\n- **optional**: Some images may support both SSH key authentication and password authentication. In this case, you can choose to use either method.\r\n- **required**: Some images may require SSH key authentication. This means you'll need to create an SSH key pair and provide its unique identifier when creating the server. \r\nYou'll also need to have the private key stored on your client machine to access the virtual machine.\r\n- **required-with-private-key**: Some images may require that you use an SSH key with the private key stored in the Clouding servers. In this case, you'll need to either [generate](#tag/SSH-Keys/operation/GenerateSSHKeyOnTheServer) an SSH key or provide the private key when [creating](#tag/SSH-Keys/operation/CreateSSHKey) it."
          readOnly: true
        password:
          enum:
            - not-supported
            - optional
            - required
          type: string
          description: "This is a simpler way to access your server by entering a password.\r\n\r\n- **not-supported**: Some images may not support password authentication, in which case you'll need to use an SSH key to access the machine.\r\n- **optional**: Some images may allow you to use either password authentication or SSH key authentication.\r\n- **required**: Some images may require a password for authentication. In this case, you'll need to provide a password when creating the server."
          readOnly: true
      additionalProperties: false
      description: 'The available access methods for the `accessConfiguration` when [creating a new server](#tag/Servers/operation/CreateServer) from this image.'
    CreateServerSnapshotRequest:
      required:
        - name
      type: object
      properties:
        shutdownServer:
          type: boolean
          description: Shutdown the server before taking the snapshot. This is recommended as it increases stability.
          default: false
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the snapshot.
        description:
          maxLength: 512
          type: string
          description: A description of the snapshot.
      additionalProperties: false
      description: Request to create a server snapshot.
    Firewall:
      type: object
      properties:
        id:
          type: string
          description: A unique string identifier used to reference a firewall.
          format: ''
        name:
          type: string
          description: The firewall display name. This name is displayed in the UI.
        description:
          type: string
          description: The firewall description. The description is displayed in the UI.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The firewall rules that are attached to this profile.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FirewallAttachment'
          description: The servers that have this firewall profile attached.
      additionalProperties: false
      description: A firewall profile.
    FirewallAttachment:
      type: object
      properties:
        serverId:
          type: string
          description: A unique string identifier used to reference the server the firewall profile is attached to.
          format: ''
          readOnly: true
        serverName:
          type: string
          description: The name of the server the firewall profile is attached to.
          readOnly: true
      additionalProperties: false
      description: A firewall attachment to a server.
    FirewallDescriptor:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the firewall profile.
          format: ''
          readOnly: true
        name:
          type: string
          description: The name of the firewall profile.
          readOnly: true
      additionalProperties: false
    FirewallList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Firewall'
          description: A list of firewall profiles.
          readOnly: true
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A paginated response of firewalls.
    FirewallRule:
      type: object
      properties:
        id:
          type: string
          description: A unique string identifier used to reference a firewall rule.
          format: ''
        description:
          type: string
          description: The description of the rule.
        protocol:
          type: string
          description: "A firewall rule protocol is a set of rules and procedures that determine how a firewall handles network traffic.\r\n\r\nSupported protocols are: `ah`,`dccp`,`egp`,`esp`,`gre`,`hopopt`,`icmp`,`igmp`,`ip`,`ipip`,`ospf`,`pgm`,`rsvp`,`sctp`,`tcp`,`udp`,`udplite`,`vrrp`, or any number between 0 and 255 represented as a string."
        portRangeMin:
          type: integer
          description: The minimum port of the port range.
          format: int32
          default: 
          nullable: true
        portRangeMax:
          type: integer
          description: The maximum port of the port range.
          format: int32
          default: 
          nullable: true
        sourceIp:
          type: string
          description: The source IP or CIDR that the rule applies to.
        enabled:
          type: boolean
          description: 'If the rule is enabled or not. When a rule is not enabled, it is not enforced.'
      additionalProperties: false
      description: A firewall rule.
    FirewallRuleResponse:
      type: object
      properties:
        firewallRule:
          $ref: '#/components/schemas/FirewallRule'
        firewallId:
          type: string
          description: A unique string identifier used to reference the firewall this rule is attached to.
          format: ''
      additionalProperties: false
      description: A firewall rule with its associated firewall unique identifier.
    GenerateKeyPair:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          pattern: '^[a-zA-Z0-9-_]+$'
          type: string
          description: The name of the new SSH key.
      additionalProperties: false
      description: Generate SSH key.
    Image:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the image.
          format: ''
          readOnly: true
        name:
          type: string
          description: The name of the image.
          readOnly: true
        minimumSizeGb:
          type: integer
          description: The minimum size in gigabytes required when creating a volume.
          format: int32
          readOnly: true
        accessMethods:
          $ref: '#/components/schemas/CreateServerAccessMethods'
        pricePerHour:
          type: number
          description: The hourly price of the image.
          format: double
          readOnly: true
        pricePerMonthApprox:
          type: number
          description: An approximation of the monthly price of the image.
          format: double
          readOnly: true
        billingUnit:
          type: string
          description: 'The unit used to bill the image, e.g. "Core" means price per server virtual core.'
          nullable: true
          readOnly: true
      additionalProperties: false
    ImageList:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: A list of images.
          readOnly: true
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
    KeypairList:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/SshKey'
          description: A list of SSH keys.
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A list of SSH keys.
    NewFirewallRule:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the new firewall.
          format: ''
      additionalProperties: false
      description: The response of a new firewall rule creation.
    NewServer:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the server.
          format: ''
        name:
          type: string
          description: The name of the server.
        hostname:
          type: string
          description: The hostname of the server.
        vCores:
          type: number
          description: The number of virtual cores allocated for the server.
          format: double
        ramGb:
          type: number
          description: The amount of RAM gigabytes allocated for the server.
          format: double
        flavor:
          type: string
          description: The identifier of the flavor of the server.
        volumeSizeGb:
          type: integer
          description: The size of the server disk in gigabytes.
          format: int32
        image:
          $ref: '#/components/schemas/ServerImageInfo'
        status:
          type: string
          description: The current status of the server.
        pendingFeatures:
          type: array
          items:
            type: string
          description: The features that will be applied once the server is prepared.
        pendingFirewalls:
          type: Array of strings
          items:
            type: integer
            format: int64
          description: The firewalls that will be attached to the server.
          format: ''
        requestedAccessConfiguration:
          $ref: '#/components/schemas/RequestedAccessConfiguration'
        backupPreferences:
          $ref: '#/components/schemas/BackupPreferences'
        action:
          $ref: '#/components/schemas/UserAction'
      additionalProperties: false
      description: The response to CreateServer.
    NoVNC:
      type: object
      properties:
        url:
          type: string
          description: The NoVNC url that can be used to access the server.
      additionalProperties: false
      description: The response with the NoVNC url.
    PageLinks:
      type: object
      properties:
        next:
          type: string
          description: The URI of the next page of results.
          nullable: true
        previous:
          type: string
          description: The URI of the previous page of results.
          nullable: true
      additionalProperties: false
      description: A collection of links for navigating pagination.
    PaginationFilter:
      type: object
      properties:
        page:
          minimum: 1
          type: integer
          description: Which page to retrieve.
          format: int32
          default: 1
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          description: The number of items per page.
          format: int32
          default: 20
      additionalProperties: false
    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
          description: The total objects.
          format: int32
      additionalProperties: false
      description: Pagination information.
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          nullable: true
        title:
          type: string
          description: 'A short, human-readable summary of the problem type.'
          nullable: true
        status:
          type: integer
          description: 'The [HTTP status code](https://www.rfc-editor.org/rfc/rfc7231#section-6) generated by the origin server for this occurrence of the problem.'
          format: int32
          nullable: true
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          nullable: true
        traceId:
          type: string
          description: The trace id is used to uniquely identify the request.
      additionalProperties: false
    RateLimitProblemDetails:
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: 'A short, human-readable summary of the problem type.'
        status:
          type: integer
          description: 'The [HTTP status code](https://www.rfc-editor.org/rfc/rfc7231#section-6) generated by the origin server for this occurrence of the problem.'
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
      additionalProperties: false
    RenameRequest:
      required:
        - newServerName
      type: object
      properties:
        newServerName:
          minLength: 1
          type: string
          description: The new name of the server.
      additionalProperties: false
      description: Rename server request.
    RequestedAccessConfiguration:
      type: object
      properties:
        sshKeyId:
          type: string
          description: The identifier of the assigned SSH key.
          format: ''
          nullable: true
        hasPassword:
          type: boolean
          description: '`true` if the password was specified in the request.'
        savePassword:
          type: boolean
          description: '`true` if the password was requested to be saved.'
      additionalProperties: false
      description: The requested access configuration of a new server.
    ResetPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password. This value will be used only if it supported by the image of the server.
          default: 
          nullable: true
        savePassword:
          type: boolean
          description: If `true` the password will be stored and you will be able to retrieve it in the future.
          default: 
          nullable: true
      additionalProperties: false
      description: The request to reset the password of a server.
    ResizeServerRequest:
      type: object
      properties:
        flavorId:
          type: string
          description: The unique identifier of the flavor.
          default: 
          nullable: true
        volumeSizeGb:
          type: integer
          description: The volume size in gigabytes. The volume size must be equal or greater than the current.
          format: int32
          default: 
          nullable: true
      additionalProperties: false
      description: The request to change the server's flavor and/or increase the volume size.
    RestoreBackupRequest:
      type: object
      properties:
        startServerAfterRestore:
          type: boolean
          description: 'If `true`, the server will be immediately started after the backup is restored.'
          default: false
      additionalProperties: false
      description: Configures the backup restoration.
    RestoreServerAccessMethods:
      type: object
      properties:
        sshKey:
          enum:
            - not-supported
            - optional
            - required
            - required-with-private-key
          type: string
          description: "This is a secure way to access your server over the network. \r\nAn SSH key pair consists of a public key and a private key. \r\nWhen the client attempts to connect to the server, the server checks if the public key matches the private key, and if so, grants access.\r\n            \r\n- **not-supported**: Some images may not support SSH key authentication. In such cases, you'll need to use a password instead.\r\n- **optional**: Some images may support both SSH key authentication and password authentication. In this case, you can choose to use either method.\r\n- **required**: Some images may require SSH key authentication. This means you'll need to create an SSH key pair and provide its unique identifier when creating the server. \r\nYou'll also need to have the private key stored on your client machine to access the virtual machine.\r\n- **required-with-private-key**: Some images may require that you use an SSH key with the private key stored in the Clouding servers. In this case, you'll need to either [generate](#tag/SSH-Keys/operation/GenerateSSHKeyOnTheServer) an SSH key or provide the private key when [creating](#tag/SSH-Keys/operation/CreateSSHKey) it."
          readOnly: true
        password:
          enum:
            - not-supported
            - optional
            - required
          type: string
          description: "This is a simpler way to access your server by entering a password.\r\n\r\n- **not-supported**: Some images may not support password authentication, in which case you'll need to use an SSH key to access the machine.\r\n- **optional**: Some images may allow you to use either password authentication or SSH key authentication.\r\n- **required**: Some images may require a password for authentication. In this case, you'll need to provide a password when creating the server."
          readOnly: true
      additionalProperties: false
      description: 'The access methods for the `accessConfiguration` when used as a source of [a new server](#tag/Servers/operation/CreateServer).'
    Server:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the server.
          format: ''
        name:
          type: string
          description: The name of the server.
        hostname:
          type: string
          description: The hostname of the server.
        vCores:
          type: number
          description: The number of virtual cores allocated for the server.
          format: double
        ramGb:
          type: number
          description: The amount of RAM gigabytes allocated for the server.
          format: double
        flavor:
          type: string
          description: The identifier of the flavor of the server.
        volumeSizeGb:
          type: integer
          description: The size of the server disk in gigabytes.
          format: int32
        image:
          $ref: '#/components/schemas/ServerImageInfo'
        status:
          enum:
            - Creating
            - Starting
            - Active
            - Stopped
            - Stopping
            - Rebooting
            - Resize
            - Unarchiving
            - Archived
            - Archiving
            - Pending
            - ResettingPassword
            - RestoringBackup
            - RestoringSnapshot
            - Deleted
            - Deleting
            - Error
            - Unknown
          type: string
          description: The current status of the server.
        powerState:
          enum:
            - NoState
            - Running
            - Paused
            - Shutdown
            - Crashed
            - Suspended
          type: string
          description: The power state of the server.
        features:
          type: array
          items:
            type: string
          description: "The features that are applied to the server.\r\nThe possible features are:\r\n- **AllowSmtpOut**: The Allow SMTP Out feature allows the server to send emails.\r\nThis feature is disabled by default.\r\nTo enable it use the [Allow server SMTP out](#tag/Servers/operation/AllowServerSmtpOut) endpoint.\r\n- **AntiDDoSNetworkFilter**: The <a href=\"https://clouding.zendesk.com/hc/en-us/articles/6310749915036\" target=\"_blank\">strict Anti-DDoS filtering</a>\r\ncan protect the server under constant DDoS attacks\r\nby filtering out incoming malicious traffic. This feature can only be enabled during server creation by setting the value of `enableStrictAntiDDoSFiltering` to `true`.\r\nThis feature cannot be disabled.\r\n- **Backups**: Periodic backups are enabled for this server. To configure the backup strategy of the server use the [Configure server backups](#tag/Servers/operation/ConfigureServerBackups) endpoint.\r\n- **PrivateNetwork**: The server has a second network interface connected to the private network of the user that is isolated from the public internet.\r\nTo enable this feature use the [Enable server private network](#tag/Servers/operation/EnableServerPrivateNetwork) endpoint.\r\n- **PendingUpgrade**: In certain scenarios, servers may require special attention and actions due to platform upgrades. \r\nWhen this feature is enabled, it signifies that the server must be temporarily [stopped](#tag/Servers/operation/StopServer) to apply the updates effectively."
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the server.
          format: date-time
        dnsAddress:
          type: string
          description: The DNS address of the server. The DNS address points to the public IP of the server.
        publicIp:
          type: string
          description: The public IP of the server.
        privateIp:
          type: string
          description: The private IP of the server. Available only if the private network is enabled.
          default: 
          nullable: true
        sshKeyId:
          type: string
          description: The identifier of the SSH key that was used for the server access of the server.
          format: ''
          nullable: true
      additionalProperties: false
    ServerBackupPreferencesDescriptor:
      type: object
      properties:
        slots:
          type: integer
          description: The number of backups maintained.
          format: int64
          readOnly: true
        frequency:
          enum:
            - oneDay
            - twoDays
            - threeDays
            - fourDays
            - fiveDays
            - sixDays
            - oneWeek
          type: string
          description: The frequency of backups.
          readOnly: true
      additionalProperties: false
      description: The backup strategy of the server.
    ServerCost:
      type: object
      properties:
        pricePerHour:
          type: number
          description: The hourly price of the server.
          format: double
        pricePerMonthApprox:
          type: number
          description: An approximation of the monthly price of the server
          format: double
      additionalProperties: false
      description: The cost of the server.
    ServerDetailed:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the server.
          format: ''
        name:
          type: string
          description: The name of the server.
        hostname:
          type: string
          description: The hostname of the server.
        vCores:
          type: number
          description: The number of virtual cores allocated for the server.
          format: double
        ramGb:
          type: number
          description: The amount of RAM gigabytes allocated for the server.
          format: double
        flavor:
          type: string
          description: The identifier of the flavor of the server.
        volumeSizeGb:
          type: integer
          description: The size of the server disk in gigabytes.
          format: int32
        image:
          $ref: '#/components/schemas/ServerImageInfo'
        status:
          enum:
            - Creating
            - Starting
            - Active
            - Stopped
            - Stopping
            - Rebooting
            - Resize
            - Unarchiving
            - Archived
            - Archiving
            - Pending
            - ResettingPassword
            - RestoringBackup
            - RestoringSnapshot
            - Deleted
            - Deleting
            - Error
            - Unknown
          type: string
          description: The current status of the server.
        powerState:
          enum:
            - NoState
            - Running
            - Paused
            - Shutdown
            - Crashed
            - Suspended
          type: string
          description: The power state of the server.
        features:
          type: array
          items:
            type: string
          description: "The features that are applied to the server.\r\nThe possible features are:\r\n- **AllowSmtpOut**: The Allow SMTP Out feature allows the server to send emails.\r\nThis feature is disabled by default.\r\nTo enable it use the [Allow server SMTP out](#tag/Servers/operation/AllowServerSmtpOut) endpoint.\r\n- **AntiDDoSNetworkFilter**: The <a href=\"https://clouding.zendesk.com/hc/en-us/articles/6310749915036\" target=\"_blank\">strict Anti-DDoS filtering</a>\r\ncan protect the server under constant DDoS attacks\r\nby filtering out incoming malicious traffic. This feature can only be enabled during server creation by setting the value of `enableStrictAntiDDoSFiltering` to `true`.\r\nThis feature cannot be disabled.\r\n- **Backups**: Periodic backups are enabled for this server. To configure the backup strategy of the server use the [Configure server backups](#tag/Servers/operation/ConfigureServerBackups) endpoint.\r\n- **PrivateNetwork**: The server has a second network interface connected to the private network of the user that is isolated from the public internet.\r\nTo enable this feature use the [Enable server private network](#tag/Servers/operation/EnableServerPrivateNetwork) endpoint.\r\n- **PendingUpgrade**: In certain scenarios, servers may require special attention and actions due to platform upgrades. \r\nWhen this feature is enabled, it signifies that the server must be temporarily [stopped](#tag/Servers/operation/StopServer) to apply the updates effectively."
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the server.
          format: date-time
        dnsAddress:
          type: string
          description: The DNS address of the server. The DNS address points to the public IP of the server.
        publicIp:
          type: string
          description: The public IP of the server.
        privateIp:
          type: string
          description: The private IP of the server. Available only if the private network is enabled.
          default: 
          nullable: true
        sshKeyId:
          type: string
          description: The identifier of the SSH key that was used for the server access of the server.
          format: ''
          nullable: true
        firewalls:
          type: array
          items:
            $ref: '#/components/schemas/FirewallDescriptor'
          description: The list of all firewall profiles attached to this server.
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotDescriptor'
          description: The list of all snapshots generated from this server.
        backups:
          type: array
          items:
            $ref: '#/components/schemas/BackupDescriptor'
          description: The list of all backups of the server.
        backupPreferences:
          $ref: '#/components/schemas/ServerBackupPreferencesDescriptor'
        cost:
          $ref: '#/components/schemas/ServerCost'
      additionalProperties: false
    ServerImageInfo:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the image.
          format: ''
        name:
          type: string
          description: The name of the image.
      additionalProperties: false
      description: Information of the image that was used as a basis for the server.
    ServerList:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: A list of servers.
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
    ServerPassword:
      type: object
      properties:
        password:
          type: string
          description: The server password or null if the password is not stored by the system
          default: 
          nullable: true
          readOnly: true
      additionalProperties: false
    Snapshot:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the snapshot.
          format: ''
          readOnly: true
        sizeGb:
          type: integer
          description: "The size of the snapshot in gigabytes.\r\nThe size of the snapshot restricts the minimum volume size of a server created from the snapshot."
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the snapshot.
          readOnly: true
        description:
          type: string
          description: A description of the snapshot.
          readOnly: true
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the snapshot.
          format: date-time
          readOnly: true
        sourceServerName:
          type: string
          description: The name of the server that this snapshot was created from.
          readOnly: true
        image:
          $ref: '#/components/schemas/SnapshotImageInfo'
        cost:
          $ref: '#/components/schemas/SnapshotCost'
      additionalProperties: false
    SnapshotCost:
      type: object
      properties:
        pricePerHour:
          type: number
          description: The hourly cost of the snapshot.
          format: double
        pricePerMonthApprox:
          type: number
          description: An approximation of the monthly price of the snapshot.
          format: double
      additionalProperties: false
    SnapshotDescriptor:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the snapshot.
          format: ''
          readOnly: true
        name:
          type: string
          description: The name of the snapshot.
          readOnly: true
        createdAt:
          type: string
          description: Timestamp indicating the creation date and time of the snapshot.
          format: date-time
          readOnly: true
      additionalProperties: false
    SnapshotImageInfo:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the image.
          format: ''
          nullable: true
        name:
          type: string
          description: The name of the image.
        accessMethods:
          $ref: '#/components/schemas/RestoreServerAccessMethods'
      additionalProperties: false
      description: Basic image information
    SnapshotList:
      type: object
      properties:
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
          description: A list of snapshots.
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A paginated response of snapshots.
    SshKey:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the SSH key.
          format: ''
        fingerprint:
          type: string
          description: The fingerprint of the SSH key.
        name:
          type: string
          description: The name of the SSH key.
        publicKey:
          type: string
          description: The public key of the SSH key.
        hasPrivateKey:
          type: boolean
          description: 'If `true`, the private key is stored in the server.'
      additionalProperties: false
    SshKeyDetails:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier of the SSH key.
          format: ''
        name:
          type: string
          description: The name of the SSH key.
        fingerprint:
          type: string
          description: The fingerprint of the SSH key.
        publicKey:
          type: string
          description: The public key of the SSH key.
        hasPrivateKey:
          type: boolean
          description: 'If `true`, the private key is stored.'
      additionalProperties: false
      description: The SSH key details.
    UpdateFirewall:
      required:
        - newDescription
        - newName
      type: object
      properties:
        newName:
          maxLength: 256
          minLength: 1
          pattern: '^[a-zA-Z0-9 -]+$'
          type: string
          description: The new name of the firewall.
        newDescription:
          maxLength: 512
          minLength: 1
          type: string
          description: The new description of the firewall.
      additionalProperties: false
      description: The request to change the basic information of a firewall.
    UpdateSnapshotInformation:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The new name of the snapshot.
        description:
          maxLength: 512
          type: string
          description: The new description of the snapshot.
          default: 
          nullable: true
      additionalProperties: false
      description: Update the basic information of the snapshot.
    UserAction:
      type: object
      properties:
        id:
          type: string
          description: The action identifier.
          format: ''
        status:
          enum:
            - pending
            - inProgress
            - completed
            - errored
          type: string
          description: The current status of the action.
        type:
          type: string
          description: 'The action type e.g. `shelve`, `start`, `create`, `delete`.'
        startedAt:
          type: string
          description: When the action was submitted.
          format: date-time
        completedAt:
          type: string
          description: When the action was finalized. The status should be `completed` or `errored`.
          format: date-time
          nullable: true
        resourceId:
          type: string
          description: A string identifier used to reference the resource referenced by the action.
          format: ''
          nullable: true
        resourceType:
          enum:
            - server
            - snapshot
          type: string
          description: The type of the resource referenced by the action.
          nullable: true
      additionalProperties: false
      description: The action.
    UserActionList:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/UserAction'
          description: A list of actions.
          readOnly: true
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
      description: A paginated response of actions.
    ValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
          nullable: true
        title:
          type: string
          description: 'A short, human-readable summary of the problem type.'
          nullable: true
        status:
          type: integer
          description: 'The [HTTP status code](https://www.rfc-editor.org/rfc/rfc7231#section-6) generated by the origin server for this occurrence of the problem.'
          format: int32
          nullable: true
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          nullable: true
        traceId:
          type: string
          description: The trace id is used to uniquely identify the request.
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: The validation error details.
          readOnly: true
      additionalProperties: false
    Volume:
      required:
        - id
        - source
        - ssdGb
      type: object
      properties:
        source:
          minLength: 1
          enum:
            - image
            - backup
            - snapshot
            - server
          type: string
          description: This property is used to specify the source of the volume of the new server.
        id:
          minLength: 1
          type: string
          description: "The unique identifier of the volume's source.\r\nThis property is used in conjunction with the `source`and it can be from an\r\n[image](#tag/Images/operation/ListAllImages),\r\n[backup](#tag/Backups/operation/ListAllBackups),\r\n[snapshot](#tag/Snapshots/operation/ListAllSnapshots) or\r\n[server](#tag/Servers/operation/ListAllServers)."
          format: ''
        ssdGb:
          minimum: 5
          type: integer
          description: "The size of the volume in gigabytes. The minimum size depends on the source. \r\nFor example if the `source` is `snapshot` and the snapshot is 20 gigabytes, this property should be set to minimum 20 gigabytes.\r\nThe list of available volume sizes can be retrieved from the [volume sizes](#tag/Sizes/operation/ListAllVolumeSizes) endpoint."
          format: int32
        shutDownSource:
          type: boolean
          description: "Applicable only if the `source` is `server`. \r\nWhen set to `true` the origin server will shut down before taking a snapshot. \r\nThe snapshot will be used as the volume for the new server.\r\nThe origin server will start after the snapshot is taken."
          default: 
          nullable: true
      additionalProperties: false
      description: The volume configuration and origin.
    VolumeConfigurationSizes:
      type: object
      properties:
        volumeSizes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeSize'
          description: A list of volume sizes
          readOnly: true
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
    VolumeSize:
      type: object
      properties:
        storageType:
          type: string
          description: The type of the volume storage.
          readOnly: true
        sizeGb:
          type: integer
          description: The size of the volume in gigabytes.
          format: int32
          readOnly: true
        pricePerHour:
          type: number
          description: The hourly price of the volume.
          format: double
          readOnly: true
        pricePerMonthApprox:
          type: number
          description: An approximation of the monthly price of the volume.
          format: double
          readOnly: true
      additionalProperties: false
    VpsConfigurationSizes:
      type: object
      properties:
        flavors:
          type: array
          items:
            $ref: '#/components/schemas/VpsFlavor'
          description: A list of flavors
          readOnly: true
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      additionalProperties: false
    VpsFlavor:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the flavor.
          format: ''
          readOnly: true
        vCores:
          type: number
          description: The number of virtual cores.
          format: double
          readOnly: true
        ramGb:
          type: number
          description: The number of RAM gigabytes.
          format: double
          readOnly: true
        pricePerHour:
          type: number
          description: The hourly price of the flavor.
          format: double
          readOnly: true
        pricePerMonthApprox:
          type: number
          description: An approximation of the monthly price of the flavor.
          format: double
          readOnly: true
      additionalProperties: false
  responses:
    '429':
      description: Rate limit quota exceeded
      headers:
        retry-after:
          $ref: '#/components/headers/retry-after'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/RateLimitProblemDetails'
          examples:
            429-example:
              value:
                type: https://api.clouding.io/docs#section/Introduction/Rate-limit
                title: Rate Limit Quota Exceeded
                status: 429
                detail: 'Maximum allowed: {0} per {1}. Please try again in {2} second(s).'
    '401':
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            401-example:
              value:
                type: https://www.rfc-editor.org/rfc/rfc7235#section-3.1
                title: Unauthorized
                status: 401
                traceId: 00000000-0000-0000-0000-000000000000
    '403':
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            403-example:
              value:
                type: https://www.rfc-editor.org/rfc/rfc7231#section-6.5.3
                title: Forbidden
                status: 403
                traceId: 00000000-0000-0000-0000-000000000000
    '404':
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            404-example:
              value:
                type: https://www.rfc-editor.org/rfc/rfc7231#section-6.5.4
                title: Not Found
                status: 404
                traceId: 00000000-0000-0000-0000-000000000000
    '500':
      description: Internal server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            500-example:
              value:
                type: https://www.rfc-editor.org/rfc/rfc7231#section-6.6.1
                title: Internal Server Error
                status: 500
                traceId: 00000000-0000-0000-0000-000000000000
  headers:
    x-rate-limit-limit:
      description: 'The rate limit period (eg. 1m, 12h, 1d).'
      schema:
        type: string
    x-rate-limit-remaining:
      description: Number of requests remaining.
      schema:
        type: integer
        format: int32
    x-rate-limit-reset:
      description: UTC date time (ISO 8601) when the limits reset.
      schema:
        type: string
        format: date-time
    retry-after:
      description: The number of seconds remaining until rate limit reset.
      schema:
        type: integer
        format: int32
  securitySchemes:
    X-API-KEY:
      type: apiKey
      description: The API key must be included in the headers.
      name: X-API-KEY
      in: header
security:
  - X-API-KEY: [ ]
tags:
  - name: Backups
    description: "Backups are copies of data or resources stored as a precautionary measure in case of data loss or system failure.\r\n        They can be used to restore the original data or resources to their previous state."
  - name: Actions
    description: "For [long-running actions](#section/Introduction/Long-running-actions), such as creating a server,\r\n        the API returns an `Action` object that provides information about the progress and outcome of the action."
  - name: Snapshots
    description: "Snapshots refer to a point-in-time copy of the data stored on a volume. \r\n                 A snapshot of a volume can be taken at any time and can be used to restore the volume to its previous state in the event of data loss or corruption.\r\n                 It can be also used as a volume source of a new server."
  - name: Sizes
    description: "The sizes API includes endpoints for listing the different options available for configuring the resources of a server, such as vCores and RAM (flavors), and storage (volumes).\r\nIt also includes information about the prices associated with each option."
  - name: Servers
    description: The servers API provides a range of operations for managing Clouding virtual machines.
  - name: SSH Keys
    description: The SSH keys API provides a set of operations for managing SSH keys used for secure shell authentication when connecting to a clouding virtual machine.
  - name: Images
    description: "Images refer to pre-configured virtual machine templates that contain an operating system, software applications, and configuration settings.\r\n    An image acts as a blueprint for creating new virtual machines, allowing users to quickly deploy and run instances of the image without having to manually install and configure the operating system and software.\r\n    In Clouding we offer <a href=\"https://help.clouding.io/hc/en-us/articles/360010007300-Images-available-at-Clouding\" target=\"_blank\">a variety of images</a> to choose from, including popular operating systems such as Linux and Windows, as well as images for specific applications.\r\n\r\n Servers created from an image can be accessed using either an SSH key or a password, or both, depending on the `access methods` of the image.\r\n"
  - name: Firewalls
    description: "The <a href=\"https://help.clouding.io/hc/en-us/articles/360011036200-Firewall\" target=\"_blank\">firewalls</a> API provides a comprehensive solution for managing firewalls and their associated firewall rules within your infrastructure.\r\n    With these endpoints, you can create firewalls and establish rules that define how traffic is allowed or blocked."
  - name: Account
    description: The account endpoint provides information and functionalities related to your account.